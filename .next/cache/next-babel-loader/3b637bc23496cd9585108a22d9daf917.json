{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/Work/Digitalax/f3m-marketplace/src/containers/modals/modal-raise-bid/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport BigNumber from 'bignumber.js';\nimport Button from '@components/buttons/button';\nimport Modal from '@components/modal';\nimport bidActions from '@actions/bid.actions';\nimport InputWithArrows from '@components/input-with-arrows';\nimport { closeRaiseModal } from '@actions/modals.actions';\nimport { getModalParams } from '@selectors/modal.selectors';\nimport { getMinBidIncrement, getMonaPerEth, getChainId } from '@selectors/global.selectors';\nimport styles from './styles.module.scss';\n\nconst ModalRaiseBid = ({\n  className,\n  title,\n  text,\n  textForSelect,\n  buttonText,\n  yourBidText\n}) => {\n  const dispatch = useDispatch();\n  const requests = useRef([]);\n  const {\n    id,\n    priceEth,\n    withdrawValue\n  } = useSelector(getModalParams);\n  const minBidIncrement = useSelector(getMinBidIncrement);\n  const monaPerEth = useSelector(getMonaPerEth);\n  const minBid = new BigNumber(priceEth).plus(new BigNumber(minBidIncrement));\n  const chainId = useSelector(getChainId);\n  const isMatic = chainId === '0x13881' || chainId === '0x89';\n  const {\n    0: inputPriceMona,\n    1: setInputPriceMona\n  } = useState(minBid);\n  const {\n    0: showError,\n    1: setShowError\n  } = useState(null);\n  const {\n    0: isDisabled,\n    1: setIsDisabled\n  } = useState(false);\n\n  const handleClose = () => {\n    dispatch(closeRaiseModal());\n  };\n\n  const handleClick = () => {\n    if (minBid.toNumber() > Number(inputPriceMona)) {\n      setShowError(`You must bid at least ${minBidIncrement} higher than the current highest bid`);\n      return;\n    }\n\n    setShowError(null);\n    setIsDisabled(true);\n    dispatch(bidActions.bid(id, Number(inputPriceMona), monaPerEth)).then(request => {\n      requests.current.push(request);\n      request.promise.then(() => handleClose()).catch(e => {\n        setShowError(e.message);\n        setIsDisabled(false);\n      });\n    });\n  };\n\n  useEffect(() => () => {\n    requests.current.forEach(request => request.unsubscribe());\n    requests.current = [];\n  }, []);\n  return __jsx(React.Fragment, null, /*#__PURE__*/createPortal(__jsx(Modal, {\n    onClose: () => handleClose(),\n    title: title,\n    text: text,\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: styles.footerSubtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, yourBidText), __jsx(\"span\", {\n    className: styles.footerSubtitleValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, withdrawValue, \" MONA\")), __jsx(\"p\", {\n    className: styles.caption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, textForSelect), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, \" \", minBid.toString(10), \" MONA\")), __jsx(\"div\", {\n    className: styles.selectWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, __jsx(InputWithArrows, {\n    minBidIncrement: minBidIncrement,\n    onChange: setInputPriceMona,\n    className: styles.inputWithArrows,\n    value: inputPriceMona,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }), showError && __jsx(\"p\", {\n    className: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 31\n    }\n  }, showError)), __jsx(Button, {\n    isDisabled: isDisabled || !isMatic,\n    background: \"black\",\n    onClick: () => handleClick(),\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, buttonText)))), document.body));\n};\n\nModalRaiseBid.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  text: PropTypes.array,\n  textForSelect: PropTypes.string,\n  yourBidText: PropTypes.string,\n  buttonText: PropTypes.string\n};\nModalRaiseBid.defaultProps = {\n  className: '',\n  title: 'Raise Bid',\n  // eslint-disable-next-line max-len\n  text: ['Your MONA will be escrowed into a Smart Contract until the live auction ends or you choose to withdraw it. ', 'If you are successful in winning the auction (i.e. the highest bidder at auction end) then your bidded MONA will be transferred to the designerâ€™s account. If you are unsuccessful (i.e. not highest bidder at auction end) then they will be released back to your connected wallet.'],\n  yourBidText: 'Your Bid:',\n  textForSelect: 'Minimum Bid:',\n  buttonText: 'RAISE BID'\n};\nexport default ModalRaiseBid;","map":{"version":3,"sources":["/Volumes/Data/Work/Digitalax/f3m-marketplace/src/containers/modals/modal-raise-bid/index.js"],"names":["React","useState","useRef","useEffect","createPortal","PropTypes","useDispatch","useSelector","BigNumber","Button","Modal","bidActions","InputWithArrows","closeRaiseModal","getModalParams","getMinBidIncrement","getMonaPerEth","getChainId","styles","ModalRaiseBid","className","title","text","textForSelect","buttonText","yourBidText","dispatch","requests","id","priceEth","withdrawValue","minBidIncrement","monaPerEth","minBid","plus","chainId","isMatic","inputPriceMona","setInputPriceMona","showError","setShowError","isDisabled","setIsDisabled","handleClose","handleClick","toNumber","Number","bid","then","request","current","push","promise","catch","e","message","forEach","unsubscribe","footer","footerSubtitle","footerSubtitleValue","caption","toString","selectWrapper","inputWithArrows","error","button","document","body","propTypes","string","array","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport BigNumber from 'bignumber.js';\nimport Button from '@components/buttons/button';\nimport Modal from '@components/modal';\nimport bidActions from '@actions/bid.actions';\nimport InputWithArrows from '@components/input-with-arrows';\nimport { closeRaiseModal } from '@actions/modals.actions';\nimport { getModalParams } from '@selectors/modal.selectors';\nimport { getMinBidIncrement, getMonaPerEth, getChainId } from '@selectors/global.selectors';\n\nimport styles from './styles.module.scss';\n\nconst ModalRaiseBid = ({ className, title, text, textForSelect, buttonText, yourBidText }) => {\n  const dispatch = useDispatch();\n  const requests = useRef([]);\n  const { id, priceEth, withdrawValue } = useSelector(getModalParams);\n  const minBidIncrement = useSelector(getMinBidIncrement);\n  const monaPerEth = useSelector(getMonaPerEth);\n  const minBid = new BigNumber(priceEth).plus(new BigNumber(minBidIncrement));\n  const chainId = useSelector(getChainId);\n  const isMatic = chainId === '0x13881' || chainId === '0x89';\n\n  const [inputPriceMona, setInputPriceMona] = useState(minBid);\n  const [showError, setShowError] = useState(null);\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  const handleClose = () => {\n    dispatch(closeRaiseModal());\n  };\n\n  const handleClick = () => {\n    if (minBid.toNumber() > Number(inputPriceMona)) {\n      setShowError(`You must bid at least ${minBidIncrement} higher than the current highest bid`);\n      return;\n    }\n\n    setShowError(null);\n    setIsDisabled(true);\n\n    dispatch(bidActions.bid(id, Number(inputPriceMona), monaPerEth)).then((request) => {\n      requests.current.push(request);\n      request.promise\n        .then(() => handleClose())\n        .catch((e) => {\n          setShowError(e.message);\n          setIsDisabled(false);\n        });\n    });\n  };\n\n  useEffect(\n    () => () => {\n      requests.current.forEach((request) => request.unsubscribe());\n      requests.current = [];\n    },\n    []\n  );\n\n  return (\n    <>\n      {createPortal(\n        <Modal onClose={() => handleClose()} title={title} text={text} className={className}>\n          <div className={styles.footer}>\n            <p>\n              <span className={styles.footerSubtitle}>{yourBidText}</span>\n              <span className={styles.footerSubtitleValue}>{withdrawValue} MONA</span>\n            </p>\n            <p className={styles.caption}>\n              <span>{textForSelect}</span>\n              <span> {minBid.toString(10)} MONA</span>\n            </p>\n            <div className={styles.selectWrapper}>\n              <div>\n                <InputWithArrows\n                  minBidIncrement={minBidIncrement}\n                  onChange={setInputPriceMona}\n                  className={styles.inputWithArrows}\n                  value={inputPriceMona}\n                />\n                {showError && <p className={styles.error}>{showError}</p>}\n              </div>\n              <Button\n                isDisabled={isDisabled || !isMatic}\n                background=\"black\"\n                onClick={() => handleClick()}\n                className={styles.button}\n              >\n                {buttonText}\n              </Button>\n            </div>\n          </div>\n        </Modal>,\n        document.body\n      )}\n    </>\n  );\n};\n\nModalRaiseBid.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  text: PropTypes.array,\n  textForSelect: PropTypes.string,\n  yourBidText: PropTypes.string,\n  buttonText: PropTypes.string,\n};\n\nModalRaiseBid.defaultProps = {\n  className: '',\n  title: 'Raise Bid',\n  // eslint-disable-next-line max-len\n  text: [\n    'Your MONA will be escrowed into a Smart Contract until the live auction ends or you choose to withdraw it. ',\n    'If you are successful in winning the auction (i.e. the highest bidder at auction end) then your bidded MONA will be transferred to the designerâ€™s account. If you are unsuccessful (i.e. not highest bidder at auction end) then they will be released back to your connected wallet.',\n  ],\n  yourBidText: 'Your Bid:',\n  textForSelect: 'Minimum Bid:',\n  buttonText: 'RAISE BID',\n};\n\nexport default ModalRaiseBid;\n"]},"metadata":{},"sourceType":"module"}