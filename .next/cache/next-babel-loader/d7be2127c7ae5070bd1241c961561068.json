{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/Work/Digitalax/f3m-marketplace/src/containers/modals/modal-place-bid/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport BigNumber from 'bignumber.js';\nimport PropTypes from 'prop-types';\nimport Button from '@components/buttons/button';\nimport Modal from '@components/modal';\nimport InputWithArrows from '@components/input-with-arrows';\nimport { closePlaceBidModal } from '@actions/modals.actions';\nimport bidActions from '@actions/bid.actions';\nimport { getModalParams } from '@selectors/modal.selectors';\nimport { utils as ethersUtils } from 'ethers';\nimport { getMinBidIncrement, getBidWithdrawalLockTime, getMonaPerEth, getChainId } from '@selectors/global.selectors';\nimport styles from './styles.module.scss';\n\nconst ModalPlaceBid = ({\n  className,\n  title,\n  textForSelect,\n  buttonText\n}) => {\n  const dispatch = useDispatch();\n  const requests = useRef([]);\n  const {\n    id,\n    priceEth\n  } = useSelector(getModalParams);\n  const minBidIncrement = useSelector(getMinBidIncrement);\n  const bidWithdrawalLockTime = useSelector(getBidWithdrawalLockTime);\n  const monaPerEth = useSelector(getMonaPerEth);\n  const minBid = new BigNumber(priceEth).plus(new BigNumber(minBidIncrement));\n  const chainId = useSelector(getChainId);\n  const isMatic = chainId === '0x13881' || chainId === '0x89';\n  const {\n    0: inputPriceMona,\n    1: setInputPriceMona\n  } = useState(minBid);\n  const {\n    0: isDisabled,\n    1: setIsDisabled\n  } = useState(false);\n  const {\n    0: showError,\n    1: setShowError\n  } = useState(null);\n  const {\n    0: approved,\n    1: setApproved\n  } = useState(false);\n\n  const handleClose = () => {\n    dispatch(closePlaceBidModal());\n  };\n\n  const handleClick = () => {\n    if (minBid.toNumber() > Number(inputPriceMona)) {\n      setShowError(`You must bid at least ${minBidIncrement} higher than the current highest bid`);\n      return;\n    }\n\n    setShowError(null);\n    setIsDisabled(true);\n    dispatch(bidActions.bid(id, Number(inputPriceMona), monaPerEth)).then(request => {\n      requests.current.push(request);\n      request.promise.then(() => {\n        if (approved === false) {\n          setApproved(true);\n          setIsDisabled(false);\n        } else {\n          handleClose();\n        }\n      }).catch(e => {\n        setShowError(e.message);\n        setIsDisabled(false);\n      });\n    });\n  };\n\n  useEffect(() => {\n    function getMonaApproval() {\n      dispatch(bidActions.getAllowanceForAcution()).then(val => {\n        const jsAllowedValue = parseFloat(ethersUtils.formatEther(val));\n        console.log({\n          jsAllowedValue\n        });\n        if (jsAllowedValue < 10000000000) setApproved(false);else setApproved(true);\n      });\n    }\n\n    getMonaApproval();\n  }, [inputPriceMona]);\n  useEffect(() => {\n    return () => {\n      requests.current.forEach(request => request.unsubscribe());\n      requests.current = [];\n    };\n  }, []);\n  const hours = Math.trunc(bidWithdrawalLockTime / 60 / 60);\n  const minutes = hours ? bidWithdrawalLockTime % 60 : Math.trunc(bidWithdrawalLockTime / 60);\n  const hoursTextPrefix = hours === 1 ? 'hour' : 'hours';\n  const minutesTextPrefix = minutes === 1 ? 'minute' : 'minutes';\n  const hoursText = hours ? `${hours} ${hoursTextPrefix}` : '';\n  const minutesText = minutes ? `${minutes} ${minutesTextPrefix}` : '';\n  const text = [`Your MONA will be escrowed into a Smart Contract until the live auction ends or you choose to withdraw it. \n      If another bidder outbids you, your MONA will be immediatley transferred back into your wallet.`, `After placing a bid, you will be unable to withdraw for ${hoursText} ${minutesText}`];\n  return __jsx(React.Fragment, null, /*#__PURE__*/createPortal(__jsx(Modal, {\n    onClose: () => handleClose(),\n    title: title,\n    text: text,\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    className: styles.footerCaption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, textForSelect), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \" \", minBid.toString(10), \" MONA\")), __jsx(\"div\", {\n    className: styles.selectWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, __jsx(InputWithArrows, {\n    minBidIncrement: minBidIncrement,\n    onChange: setInputPriceMona,\n    className: styles.inputWithArrows,\n    value: inputPriceMona,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }), showError && __jsx(\"p\", {\n    className: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 31\n    }\n  }, showError)), __jsx(Button, {\n    isDisabled: isDisabled || !isMatic,\n    background: \"pink\",\n    onClick: () => handleClick(),\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, approved ? buttonText : 'APPROVE $MONA')))), document.body));\n};\n\nModalPlaceBid.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  textForSelect: PropTypes.string,\n  buttonText: PropTypes.string\n};\nModalPlaceBid.defaultProps = {\n  className: '',\n  title: 'Place a Bid',\n  textForSelect: 'Minimum Bid:',\n  buttonText: 'PLACE A BID'\n};\nexport default ModalPlaceBid;","map":{"version":3,"sources":["/Volumes/Data/Work/Digitalax/f3m-marketplace/src/containers/modals/modal-place-bid/index.js"],"names":["React","useState","useRef","useEffect","createPortal","useSelector","useDispatch","BigNumber","PropTypes","Button","Modal","InputWithArrows","closePlaceBidModal","bidActions","getModalParams","utils","ethersUtils","getMinBidIncrement","getBidWithdrawalLockTime","getMonaPerEth","getChainId","styles","ModalPlaceBid","className","title","textForSelect","buttonText","dispatch","requests","id","priceEth","minBidIncrement","bidWithdrawalLockTime","monaPerEth","minBid","plus","chainId","isMatic","inputPriceMona","setInputPriceMona","isDisabled","setIsDisabled","showError","setShowError","approved","setApproved","handleClose","handleClick","toNumber","Number","bid","then","request","current","push","promise","catch","e","message","getMonaApproval","getAllowanceForAcution","val","jsAllowedValue","parseFloat","formatEther","console","log","forEach","unsubscribe","hours","Math","trunc","minutes","hoursTextPrefix","minutesTextPrefix","hoursText","minutesText","text","footer","footerCaption","toString","selectWrapper","inputWithArrows","error","button","document","body","propTypes","string","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,KAAK,IAAIC,WAAlB,QAAqC,QAArC;AACA,SACEC,kBADF,EAEEC,wBAFF,EAGEC,aAHF,EAIEC,UAJF,QAKO,6BALP;AAMA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA,aAApB;AAAmCC,EAAAA;AAAnC,CAAD,KAAqD;AACzE,QAAMC,QAAQ,GAAGrB,WAAW,EAA5B;AACA,QAAMsB,QAAQ,GAAG1B,MAAM,CAAC,EAAD,CAAvB;AAEA,QAAM;AAAE2B,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAmBzB,WAAW,CAACS,cAAD,CAApC;AACA,QAAMiB,eAAe,GAAG1B,WAAW,CAACY,kBAAD,CAAnC;AACA,QAAMe,qBAAqB,GAAG3B,WAAW,CAACa,wBAAD,CAAzC;AAEA,QAAMe,UAAU,GAAG5B,WAAW,CAACc,aAAD,CAA9B;AACA,QAAMe,MAAM,GAAG,IAAI3B,SAAJ,CAAcuB,QAAd,EAAwBK,IAAxB,CAA6B,IAAI5B,SAAJ,CAAcwB,eAAd,CAA7B,CAAf;AACA,QAAMK,OAAO,GAAG/B,WAAW,CAACe,UAAD,CAA3B;AACA,QAAMiB,OAAO,GAAGD,OAAO,KAAK,SAAZ,IAAyBA,OAAO,KAAK,MAArD;AAEA,QAAM;AAAA,OAACE,cAAD;AAAA,OAAiBC;AAAjB,MAAsCtC,QAAQ,CAACiC,MAAD,CAApD;AACA,QAAM;AAAA,OAACM,UAAD;AAAA,OAAaC;AAAb,MAA8BxC,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAA,OAACyC,SAAD;AAAA,OAAYC;AAAZ,MAA4B1C,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAA,OAAC2C,QAAD;AAAA,OAAWC;AAAX,MAA0B5C,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAM6C,WAAW,GAAG,MAAM;AACxBnB,IAAAA,QAAQ,CAACf,kBAAkB,EAAnB,CAAR;AACD,GAFD;;AAIA,QAAMmC,WAAW,GAAG,MAAM;AACxB,QAAIb,MAAM,CAACc,QAAP,KAAoBC,MAAM,CAACX,cAAD,CAA9B,EAAgD;AAC9CK,MAAAA,YAAY,CAAE,yBAAwBZ,eAAgB,sCAA1C,CAAZ;AACA;AACD;;AACDY,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAd,IAAAA,QAAQ,CAACd,UAAU,CAACqC,GAAX,CAAerB,EAAf,EAAmBoB,MAAM,CAACX,cAAD,CAAzB,EAA2CL,UAA3C,CAAD,CAAR,CAAiEkB,IAAjE,CAAuEC,OAAD,IAAa;AACjFxB,MAAAA,QAAQ,CAACyB,OAAT,CAAiBC,IAAjB,CAAsBF,OAAtB;AACAA,MAAAA,OAAO,CAACG,OAAR,CACGJ,IADH,CACQ,MAAM;AACV,YAAIP,QAAQ,KAAK,KAAjB,EAAwB;AACtBC,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAJ,UAAAA,aAAa,CAAC,KAAD,CAAb;AACD,SAHD,MAGO;AACLK,UAAAA,WAAW;AACZ;AACF,OARH,EASGU,KATH,CASUC,CAAD,IAAO;AACZd,QAAAA,YAAY,CAACc,CAAC,CAACC,OAAH,CAAZ;AACAjB,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAZH;AAaD,KAfD;AAgBD,GAvBD;;AAwBAtC,EAAAA,SAAS,CAAC,MAAM;AACd,aAASwD,eAAT,GAA2B;AACzBhC,MAAAA,QAAQ,CAACd,UAAU,CAAC+C,sBAAX,EAAD,CAAR,CAA8CT,IAA9C,CAAoDU,GAAD,IAAS;AAC1D,cAAMC,cAAc,GAAGC,UAAU,CAAC/C,WAAW,CAACgD,WAAZ,CAAwBH,GAAxB,CAAD,CAAjC;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY;AAACJ,UAAAA;AAAD,SAAZ;AACA,YAAIA,cAAc,GAAG,WAArB,EAAkCjB,WAAW,CAAC,KAAD,CAAX,CAAlC,KACKA,WAAW,CAAC,IAAD,CAAX;AACN,OALD;AAMD;;AACDc,IAAAA,eAAe;AAChB,GAVQ,EAUN,CAACrB,cAAD,CAVM,CAAT;AAYAnC,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXyB,MAAAA,QAAQ,CAACyB,OAAT,CAAiBc,OAAjB,CAA0Bf,OAAD,IAAaA,OAAO,CAACgB,WAAR,EAAtC;AACAxC,MAAAA,QAAQ,CAACyB,OAAT,GAAmB,EAAnB;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOA,QAAMgB,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWvC,qBAAqB,GAAG,EAAxB,GAA6B,EAAxC,CAAd;AACA,QAAMwC,OAAO,GAAGH,KAAK,GAAGrC,qBAAqB,GAAG,EAA3B,GAAgCsC,IAAI,CAACC,KAAL,CAAWvC,qBAAqB,GAAG,EAAnC,CAArD;AAEA,QAAMyC,eAAe,GAAGJ,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuB,OAA/C;AACA,QAAMK,iBAAiB,GAAGF,OAAO,KAAK,CAAZ,GAAgB,QAAhB,GAA2B,SAArD;AAEA,QAAMG,SAAS,GAAGN,KAAK,GAAI,GAAEA,KAAM,IAAGI,eAAgB,EAA/B,GAAmC,EAA1D;AACA,QAAMG,WAAW,GAAGJ,OAAO,GAAI,GAAEA,OAAQ,IAAGE,iBAAkB,EAAnC,GAAuC,EAAlE;AAEA,QAAMG,IAAI,GAAG,CACV;AACL,sGAFe,EAGV,2DAA0DF,SAAU,IAAGC,WAAY,EAHzE,CAAb;AAMA,SACE,yCACGxE,YAAY,CACX,MAAC,KAAD;AAAO,IAAA,OAAO,EAAE,MAAM0C,WAAW,EAAjC;AAAqC,IAAA,KAAK,EAAEtB,KAA5C;AAAmD,IAAA,IAAI,EAAEqD,IAAzD;AAA+D,IAAA,SAAS,EAAEtD,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACyD,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAEzD,MAAM,CAAC0D,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOtD,aAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQS,MAAM,CAAC8C,QAAP,CAAgB,EAAhB,CAAR,UAFF,CADF,EAKE;AAAK,IAAA,SAAS,EAAE3D,MAAM,CAAC4D,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AACE,IAAA,eAAe,EAAElD,eADnB;AAEE,IAAA,QAAQ,EAAEQ,iBAFZ;AAGE,IAAA,SAAS,EAAElB,MAAM,CAAC6D,eAHpB;AAIE,IAAA,KAAK,EAAE5C,cAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOGI,SAAS,IAAI;AAAG,IAAA,SAAS,EAAErB,MAAM,CAAC8D,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BzC,SAA7B,CAPhB,CADF,EAUE,MAAC,MAAD;AACE,IAAA,UAAU,EAAEF,UAAU,IAAI,CAACH,OAD7B;AAEE,IAAA,UAAU,EAAC,MAFb;AAGE,IAAA,OAAO,EAAE,MAAMU,WAAW,EAH5B;AAIE,IAAA,SAAS,EAAE1B,MAAM,CAAC+D,MAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGxC,QAAQ,GAAGlB,UAAH,GAAgB,eAN3B,CAVF,CALF,CADF,CADW,EA4BX2D,QAAQ,CAACC,IA5BE,CADf,CADF;AAkCD,CAlHD;;AAoHAhE,aAAa,CAACiE,SAAd,GAA0B;AACxBhE,EAAAA,SAAS,EAAEf,SAAS,CAACgF,MADG;AAExBhE,EAAAA,KAAK,EAAEhB,SAAS,CAACgF,MAFO;AAGxB/D,EAAAA,aAAa,EAAEjB,SAAS,CAACgF,MAHD;AAIxB9D,EAAAA,UAAU,EAAElB,SAAS,CAACgF;AAJE,CAA1B;AAOAlE,aAAa,CAACmE,YAAd,GAA6B;AAC3BlE,EAAAA,SAAS,EAAE,EADgB;AAE3BC,EAAAA,KAAK,EAAE,aAFoB;AAG3BC,EAAAA,aAAa,EAAE,cAHY;AAI3BC,EAAAA,UAAU,EAAE;AAJe,CAA7B;AAOA,eAAeJ,aAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport BigNumber from 'bignumber.js';\nimport PropTypes from 'prop-types';\nimport Button from '@components/buttons/button';\nimport Modal from '@components/modal';\nimport InputWithArrows from '@components/input-with-arrows';\nimport { closePlaceBidModal } from '@actions/modals.actions';\nimport bidActions from '@actions/bid.actions';\nimport { getModalParams } from '@selectors/modal.selectors';\nimport { utils as ethersUtils } from 'ethers';\nimport {\n  getMinBidIncrement,\n  getBidWithdrawalLockTime,\n  getMonaPerEth,\n  getChainId,\n} from '@selectors/global.selectors';\nimport styles from './styles.module.scss';\n\nconst ModalPlaceBid = ({ className, title, textForSelect, buttonText }) => {\n  const dispatch = useDispatch();\n  const requests = useRef([]);\n\n  const { id, priceEth } = useSelector(getModalParams);\n  const minBidIncrement = useSelector(getMinBidIncrement);\n  const bidWithdrawalLockTime = useSelector(getBidWithdrawalLockTime);\n\n  const monaPerEth = useSelector(getMonaPerEth);\n  const minBid = new BigNumber(priceEth).plus(new BigNumber(minBidIncrement));\n  const chainId = useSelector(getChainId);\n  const isMatic = chainId === '0x13881' || chainId === '0x89';\n\n  const [inputPriceMona, setInputPriceMona] = useState(minBid);\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [showError, setShowError] = useState(null);\n  const [approved, setApproved] = useState(false);\n\n  const handleClose = () => {\n    dispatch(closePlaceBidModal());\n  };\n\n  const handleClick = () => {\n    if (minBid.toNumber() > Number(inputPriceMona)) {\n      setShowError(`You must bid at least ${minBidIncrement} higher than the current highest bid`);\n      return;\n    }\n    setShowError(null);\n    setIsDisabled(true);\n    dispatch(bidActions.bid(id, Number(inputPriceMona), monaPerEth)).then((request) => {\n      requests.current.push(request);\n      request.promise\n        .then(() => {\n          if (approved === false) {\n            setApproved(true);\n            setIsDisabled(false);\n          } else {\n            handleClose();\n          }\n        })\n        .catch((e) => {\n          setShowError(e.message);\n          setIsDisabled(false);\n        });\n    });\n  };\n  useEffect(() => {\n    function getMonaApproval() {\n      dispatch(bidActions.getAllowanceForAcution()).then((val) => {\n        const jsAllowedValue = parseFloat(ethersUtils.formatEther(val));\n        console.log({jsAllowedValue})\n        if (jsAllowedValue < 10000000000) setApproved(false);\n        else setApproved(true);\n      });\n    }\n    getMonaApproval();\n  }, [inputPriceMona]);\n\n  useEffect(() => {\n    return () => {\n      requests.current.forEach((request) => request.unsubscribe());\n      requests.current = [];\n    };\n  }, []);\n\n  const hours = Math.trunc(bidWithdrawalLockTime / 60 / 60);\n  const minutes = hours ? bidWithdrawalLockTime % 60 : Math.trunc(bidWithdrawalLockTime / 60);\n\n  const hoursTextPrefix = hours === 1 ? 'hour' : 'hours';\n  const minutesTextPrefix = minutes === 1 ? 'minute' : 'minutes';\n\n  const hoursText = hours ? `${hours} ${hoursTextPrefix}` : '';\n  const minutesText = minutes ? `${minutes} ${minutesTextPrefix}` : '';\n\n  const text = [\n    `Your MONA will be escrowed into a Smart Contract until the live auction ends or you choose to withdraw it. \n      If another bidder outbids you, your MONA will be immediatley transferred back into your wallet.`,\n    `After placing a bid, you will be unable to withdraw for ${hoursText} ${minutesText}`,\n  ];\n\n  return (\n    <>\n      {createPortal(\n        <Modal onClose={() => handleClose()} title={title} text={text} className={className}>\n          <div className={styles.footer}>\n            <p className={styles.footerCaption}>\n              <span>{textForSelect}</span>\n              <span> {minBid.toString(10)} MONA</span>\n            </p>\n            <div className={styles.selectWrapper}>\n              <div>\n                <InputWithArrows\n                  minBidIncrement={minBidIncrement}\n                  onChange={setInputPriceMona}\n                  className={styles.inputWithArrows}\n                  value={inputPriceMona}\n                />\n                {showError && <p className={styles.error}>{showError}</p>}\n              </div>\n              <Button\n                isDisabled={isDisabled || !isMatic}\n                background=\"pink\"\n                onClick={() => handleClick()}\n                className={styles.button}\n              >\n                {approved ? buttonText : 'APPROVE $MONA'}\n              </Button>\n            </div>\n          </div>\n        </Modal>,\n        document.body\n      )}\n    </>\n  );\n};\n\nModalPlaceBid.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  textForSelect: PropTypes.string,\n  buttonText: PropTypes.string,\n};\n\nModalPlaceBid.defaultProps = {\n  className: '',\n  title: 'Place a Bid',\n  textForSelect: 'Minimum Bid:',\n  buttonText: 'PLACE A BID',\n};\n\nexport default ModalPlaceBid;\n"]},"metadata":{},"sourceType":"module"}