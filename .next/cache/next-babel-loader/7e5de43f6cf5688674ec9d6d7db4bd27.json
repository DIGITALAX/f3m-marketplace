{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/Work/Digitalax/f3m-marketplace/src/containers/modals/modal-connect-wallet/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from '@components/buttons/button';\nimport Modal from '@components/modal';\nimport Notification from '@components/notification';\nimport { closeConnectMetamaskModal, closeNotInstalledMetamask } from '@actions/modals.actions';\nimport userActions from '@actions/user.actions';\nimport { WALLET_METAMASK, WALLET_ARKANE } from '@constants/global.constants';\nimport styles from './styles.module.scss';\n\nconst ModalConnectWallet = ({\n  className,\n  title\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const isShowNotificationConnectMetamask = useSelector(state => state.modals.get('isShowNotificationConnectMetamask'));\n\n  const handleClose = () => {\n    dispatch(closeConnectMetamaskModal());\n    dispatch(closeNotInstalledMetamask());\n  };\n\n  const handleClick = source => {\n    dispatch(userActions.tryToLogin(source));\n  };\n\n  return __jsx(React.Fragment, null, /*#__PURE__*/createPortal(__jsx(Modal, {\n    onClose: () => handleClose(),\n    title: title,\n    className: styles.connectwallet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.modalItem,\n    onClick: () => handleClick(WALLET_METAMASK),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: styles.modalsTextForIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Metamask\"), __jsx(\"img\", {\n    className: styles.modalIcon,\n    src: \"/images/icons/metamask.svg\",\n    alt: \"metamask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: styles.modalItem,\n    onClick: () => handleClick(WALLET_ARKANE),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: styles.modalsTextForIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Arkane Wallet\"), __jsx(\"img\", {\n    className: styles.modalIcon,\n    src: \"https://raw.githubusercontent.com/ArkaneNetwork/content-management/master/logo/Arkane_only_A.svg\",\n    alt: \"arkane\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })), isShowNotificationConnectMetamask && __jsx(Notification, {\n    text: ['You have to install the metamask extension.'],\n    className: styles.notificationBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  })), document.body));\n};\n\n_s(ModalConnectWallet, \"mMXnig/WhV76SNI8kDXs6L6Xy+8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ModalConnectWallet;\nModalConnectWallet.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string\n};\nModalConnectWallet.defaultProps = {\n  className: '',\n  title: 'Connect Wallet'\n};\nexport default ModalConnectWallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalConnectWallet\");","map":{"version":3,"sources":["/Volumes/Data/Work/Digitalax/f3m-marketplace/src/containers/modals/modal-connect-wallet/index.js"],"names":["React","createPortal","PropTypes","useDispatch","useSelector","Button","Modal","Notification","closeConnectMetamaskModal","closeNotInstalledMetamask","userActions","WALLET_METAMASK","WALLET_ARKANE","styles","ModalConnectWallet","className","title","dispatch","isShowNotificationConnectMetamask","state","modals","get","handleClose","handleClick","source","tryToLogin","connectwallet","modalItem","modalsTextForIcon","modalIcon","notificationBox","document","body","propTypes","string","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from '@components/buttons/button';\nimport Modal from '@components/modal';\nimport Notification from '@components/notification';\n\nimport { closeConnectMetamaskModal, closeNotInstalledMetamask } from '@actions/modals.actions';\nimport userActions from '@actions/user.actions';\nimport { WALLET_METAMASK, WALLET_ARKANE } from '@constants/global.constants';\n\nimport styles from './styles.module.scss';\n\nconst ModalConnectWallet = ({ className, title }) => {\n  const dispatch = useDispatch();\n  const isShowNotificationConnectMetamask = useSelector((state) =>\n    state.modals.get('isShowNotificationConnectMetamask')\n  );\n\n  const handleClose = () => {\n    dispatch(closeConnectMetamaskModal());\n    dispatch(closeNotInstalledMetamask());\n  };\n\n  const handleClick = (source) => {\n    dispatch(userActions.tryToLogin(source));\n  };\n\n  return (\n    <>\n      {createPortal(\n        <Modal onClose={() => handleClose()} title={title} className={styles.connectwallet}>\n          <div className={styles.modalItem} onClick={() => handleClick(WALLET_METAMASK)}>\n            <span className={styles.modalsTextForIcon}>Metamask</span>\n            <img className={styles.modalIcon} src=\"/images/icons/metamask.svg\" alt=\"metamask\" />\n          </div>\n          <div className={styles.modalItem} onClick={() => handleClick(WALLET_ARKANE)}>\n            <span className={styles.modalsTextForIcon}>Arkane Wallet</span>\n            <img\n              className={styles.modalIcon}\n              src=\"https://raw.githubusercontent.com/ArkaneNetwork/content-management/master/logo/Arkane_only_A.svg\"\n              alt=\"arkane\"\n              />\n          </div>\n          {isShowNotificationConnectMetamask && (\n            <Notification\n              text={['You have to install the metamask extension.']}\n              className={styles.notificationBox}\n            />\n          )}\n        </Modal>,\n        document.body\n      )}\n    </>\n  );\n};\n\nModalConnectWallet.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n};\n\nModalConnectWallet.defaultProps = {\n  className: '',\n  title: 'Connect Wallet',\n};\n\nexport default ModalConnectWallet;\n"]},"metadata":{},"sourceType":"module"}