{"ast":null,"code":"import { request } from 'graphql-request';\nimport config from '@utils/config';\nimport { DEV_HTTP_NETWORK_URL } from '@constants/global.constants';\nimport { getAuctionsByIds, getAuctionsHistoryByTimestampGt, getResultedAuctionsByEndTimeGt, getLiveAuctions, getGarmentsByIds, getGarmentsByDesignerId, getDesignersByIds, getAuctionsHistoryByIds, getAuctionContracts, getDigitalaxCollector, getDigitalaxGarmentsCollections, getCollectorsById, getDigitalaxMarketplacePurchaseHistory } from '@services/api/gql.queries.api.service';\nimport { getDigitalaxGarmentNFTV2GlobalStat, getDigitalaxGarmentsCollectionsV2, getDigitalaxMarketplaceV2PurchaseHistory, getLiveAuctionsV2, getCollectorsByIdV2, getDigitalaxCollectorV2 } from './gql.queries.v2.api.service';\n\nclass APIService {\n  constructor() {\n    this.url = DEV_HTTP_NETWORK_URL;\n  }\n\n  setUrl(url) {\n    this.url = url;\n  }\n\n  async getResultedAuctionsByEndTimeGt(endTime) {\n    return request(this.url, getResultedAuctionsByEndTimeGt, {\n      endTime\n    });\n  }\n\n  async getAuctionsHistoryByTimestampGt(timestamp) {\n    return request(this.url, getAuctionsHistoryByTimestampGt, {\n      timestamp\n    });\n  }\n\n  async getLiveAuctions() {\n    return request(this.url, getLiveAuctions);\n  }\n\n  async getGarmentsCollections() {\n    return request(this.url, getDigitalaxGarmentsCollections);\n  }\n\n  async getCollectorsById(address) {\n    return request(this.url, getCollectorsById, {\n      id: address\n    });\n  }\n\n  async getAuctionsByIds(ids) {\n    return request(this.url, getAuctionsByIds, {\n      ids\n    });\n  }\n\n  async getDesignersByIds(ids) {\n    return request(this.url, getDesignersByIds, {\n      ids\n    });\n  }\n\n  async getGarmentsByIds(ids) {\n    return request(this.url, getGarmentsByIds, {\n      ids\n    });\n  }\n\n  async getGarmentsByDesignerIds(ids) {\n    return request(this.url, getGarmentsByDesignerId, {\n      ids\n    });\n  }\n\n  async getAuctionsHistoryByIds(ids) {\n    return request(this.url, getAuctionsHistoryByIds, {\n      ids\n    });\n  }\n\n  async getAuctionContracts() {\n    return request(this.url, getAuctionContracts);\n  }\n\n  async getDigitalaxCollector(address) {\n    return request(this.url, getDigitalaxCollector, {\n      id: address\n    });\n  }\n\n  async getMarketplacePurchaseHistory(address, id) {\n    return request(this.url, getDigitalaxMarketplacePurchaseHistory, {\n      buyer: address,\n      garmentId: id\n    });\n  } // v2\n\n\n  async getLiveAuctionsV2() {\n    return request(this.url, getLiveAuctionsV2);\n  }\n\n  async getDigitalaxCollectorV2(address) {\n    return request(this.url, getDigitalaxCollectorV2, {\n      id: address\n    });\n  }\n\n  async getGarmentsCollectionsV2() {\n    return request(this.url, getDigitalaxGarmentsCollectionsV2);\n  }\n\n  async getCollectorsV2ById(address) {\n    return request(this.url, getCollectorsByIdV2, {\n      id: address\n    });\n  }\n\n  async getMarketplacePurchaseHistoryV2(address, id) {\n    return request(this.url, getDigitalaxMarketplaceV2PurchaseHistory, {\n      buyer: address,\n      garmentId: id\n    });\n  }\n\n  async getMonaPerEth() {\n    return request(config.API_URLS['mumbai'], getDigitalaxGarmentNFTV2GlobalStat);\n  }\n\n  async getEthRate() {\n    return fetch(`${config.EXCHANGE_API}/simple/price?ids=ethereum&vs_currencies=usd`).then(response => response.json());\n  }\n\n}\n\nexport default new APIService();","map":{"version":3,"sources":["/Volumes/Data/Work/Digitalax/f3m-marketplace/src/services/api/api.service.js"],"names":["request","config","DEV_HTTP_NETWORK_URL","getAuctionsByIds","getAuctionsHistoryByTimestampGt","getResultedAuctionsByEndTimeGt","getLiveAuctions","getGarmentsByIds","getGarmentsByDesignerId","getDesignersByIds","getAuctionsHistoryByIds","getAuctionContracts","getDigitalaxCollector","getDigitalaxGarmentsCollections","getCollectorsById","getDigitalaxMarketplacePurchaseHistory","getDigitalaxGarmentNFTV2GlobalStat","getDigitalaxGarmentsCollectionsV2","getDigitalaxMarketplaceV2PurchaseHistory","getLiveAuctionsV2","getCollectorsByIdV2","getDigitalaxCollectorV2","APIService","constructor","url","setUrl","endTime","timestamp","getGarmentsCollections","address","id","ids","getGarmentsByDesignerIds","getMarketplacePurchaseHistory","buyer","garmentId","getGarmentsCollectionsV2","getCollectorsV2ById","getMarketplacePurchaseHistoryV2","getMonaPerEth","API_URLS","getEthRate","fetch","EXCHANGE_API","then","response","json"],"mappings":"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","sourcesContent":["import { request } from 'graphql-request';\nimport config from '@utils/config';\nimport { DEV_HTTP_NETWORK_URL } from '@constants/global.constants';\nimport {\n  getAuctionsByIds,\n  getAuctionsHistoryByTimestampGt,\n  getResultedAuctionsByEndTimeGt,\n  getLiveAuctions,\n  getGarmentsByIds,\n  getGarmentsByDesignerId,\n  getDesignersByIds,\n  getAuctionsHistoryByIds,\n  getAuctionContracts,\n  getDigitalaxCollector,\n  getDigitalaxGarmentsCollections,\n  getCollectorsById,\n  getDigitalaxMarketplacePurchaseHistory,\n} from '@services/api/gql.queries.api.service';\nimport {\n  getDigitalaxGarmentNFTV2GlobalStat,\n  getDigitalaxGarmentsCollectionsV2,\n  getDigitalaxMarketplaceV2PurchaseHistory,\n  getLiveAuctionsV2,\n  getCollectorsByIdV2,\n  getDigitalaxCollectorV2,\n} from './gql.queries.v2.api.service';\n\nclass APIService {\n  constructor() {\n    this.url = DEV_HTTP_NETWORK_URL;\n  }\n\n  setUrl(url) {\n    this.url = url;\n  }\n\n  async getResultedAuctionsByEndTimeGt(endTime) {\n    return request(this.url, getResultedAuctionsByEndTimeGt, { endTime });\n  }\n\n  async getAuctionsHistoryByTimestampGt(timestamp) {\n    return request(this.url, getAuctionsHistoryByTimestampGt, { timestamp });\n  }\n\n  async getLiveAuctions() {\n    return request(this.url, getLiveAuctions);\n  }\n\n  async getGarmentsCollections() {\n    return request(this.url, getDigitalaxGarmentsCollections);\n  }\n\n  async getCollectorsById(address) {\n    return request(this.url, getCollectorsById, { id: address });\n  }\n\n  async getAuctionsByIds(ids) {\n    return request(this.url, getAuctionsByIds, { ids });\n  }\n\n  async getDesignersByIds(ids) {\n    return request(this.url, getDesignersByIds, { ids });\n  }\n\n  async getGarmentsByIds(ids) {\n    return request(this.url, getGarmentsByIds, { ids });\n  }\n\n  async getGarmentsByDesignerIds(ids) {\n    return request(this.url, getGarmentsByDesignerId, { ids });\n  }\n\n  async getAuctionsHistoryByIds(ids) {\n    return request(this.url, getAuctionsHistoryByIds, { ids });\n  }\n\n  async getAuctionContracts() {\n    return request(this.url, getAuctionContracts);\n  }\n\n  async getDigitalaxCollector(address) {\n    return request(this.url, getDigitalaxCollector, { id: address });\n  }\n\n  async getMarketplacePurchaseHistory(address, id) {\n    return request(this.url, getDigitalaxMarketplacePurchaseHistory, {\n      buyer: address,\n      garmentId: id,\n    });\n  }\n\n  // v2\n\n  async getLiveAuctionsV2() {\n    return request(this.url, getLiveAuctionsV2);\n  }\n\n  async getDigitalaxCollectorV2(address) {\n    return request(this.url, getDigitalaxCollectorV2, { id: address });\n  }\n\n  async getGarmentsCollectionsV2() {\n    return request(this.url, getDigitalaxGarmentsCollectionsV2);\n  }\n\n  async getCollectorsV2ById(address) {\n    return request(this.url, getCollectorsByIdV2, { id: address });\n  }\n\n  async getMarketplacePurchaseHistoryV2(address, id) {\n    return request(this.url, getDigitalaxMarketplaceV2PurchaseHistory, {\n      buyer: address,\n      garmentId: id,\n    });\n  }\n\n  async getMonaPerEth() {\n    return request(config.API_URLS['mumbai'], getDigitalaxGarmentNFTV2GlobalStat);\n  }\n\n  async getEthRate() {\n    return fetch(`${config.EXCHANGE_API}/simple/price?ids=ethereum&vs_currencies=usd`).then(\n      (response) => response.json(),\n    );\n  }\n}\n\nexport default new APIService();\n"]},"metadata":{},"sourceType":"module"}