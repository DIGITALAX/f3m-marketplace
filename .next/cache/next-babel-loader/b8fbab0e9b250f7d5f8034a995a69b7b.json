{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13;\n\nimport { gql } from 'graphql-request';\nimport { HISTORY_BID_PLACED_EVENT, HISTORY_BID_WITHDRAWN_EVENT } from '@constants/history.constants';\nexport const getLiveAuctions = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  {\\n    digitalaxGarmentAuctions(first: 1000, where: { resulted_not_in: [true] }) {\\n      id\\n      reservePrice\\n      endTime\\n      startTime\\n      resulted\\n      topBidder {\\n        id\\n      }\\n      topBid\\n      lastBidTime\\n      garment {\\n        id\\n        designer\\n        primarySalePrice\\n        tokenUri\\n        name\\n        image\\n        animation\\n        children {\\n          amount\\n          tokenUri\\n          id\\n        }\\n      }\\n      designer {\\n        id\\n      }\\n      contract {\\n        id\\n        minBidIncrement\\n        bidWithdrawalLockTime\\n      }\\n    }\\n  }\\n\"])));\nexport const getAuctionsByIds = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  query getAuctionsByIds($ids: [ID!]) {\\n    digitalaxGarmentAuctions(first: 1000, where: { id_in: $ids }) {\\n      id\\n      reservePrice\\n      endTime\\n      startTime\\n      resulted\\n      topBidder {\\n        id\\n      }\\n      topBid\\n      lastBidTime\\n    }\\n  }\\n\"])));\nexport const getGarmentsByIds = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  query getGarmentsByIds($ids: [ID!]) {\\n    digitalaxGarments(first: 1000, where: { id_in: $ids }) {\\n      id\\n      designer\\n      owner\\n      primarySalePrice\\n      tokenUri\\n      children {\\n        amount\\n        tokenUri\\n        id\\n      }\\n    }\\n  }\\n\"])));\nexport const getDesignersByIds = gql(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  query getDesignersByIds($ids: [ID!]) {\\n    digitalaxGarmentDesigners(first: 1000, where: { id_in: $ids }) {\\n      id\\n      garments(first: 1000) {\\n        id\\n        tokenUri\\n      }\\n      listings {\\n        reservePrice\\n        startTime\\n        endTime\\n        resulted\\n        topBidder {\\n          id\\n        }\\n        topBid\\n        lastBidTime\\n      }\\n    }\\n  }\\n\"])));\nexport const getGarmentsByDesignerId = gql(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  query getGarmentsByDesignerId($ids: [Bytes!]) {\\n    digitalaxGarments(first: 1000, where: { designer_in: $ids }) {\\n      id\\n      designer\\n      owner\\n      primarySalePrice\\n      tokenUri\\n      children {\\n        amount\\n        tokenUri\\n        id\\n      }\\n    }\\n  }\\n\"])));\nexport const getAuctionsHistoryByIds = gql(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n  query getAuctionsHistoryByIds($ids: [ID!]) {\\n    digitalaxGarmentAuctionHistories(first: 1000, where: { token_in: $ids }) {\\n      id\\n      eventName\\n      timestamp\\n      transactionHash\\n      bidder {\\n        id\\n      }\\n      value\\n      token {\\n        id\\n        owner\\n        primarySalePrice\\n        tokenUri\\n        children {\\n          id\\n          amount\\n          tokenUri\\n        }\\n      }\\n    }\\n  }\\n\"])));\nexport const getAuctionsHistoryByTimestampGt = gql(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n  query getAuctionsHistoryByTimestampGt($timestamp: BigInt!) {\\n    digitalaxGarmentAuctionHistories(first: 1000, where: {\\n      eventName_in: [\\\"\", \"\\\",\\n       \\\"\", \"\\\"], \\n       timestamp_gt: $timestamp}) {\\n      id\\n      eventName\\n      timestamp\\n      value\\n    }\\n  }\\n\"])), HISTORY_BID_PLACED_EVENT, HISTORY_BID_WITHDRAWN_EVENT);\nexport const getAuctionContracts = gql(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n  {\\n    digitalaxAuctionContracts(first: 1000) {\\n      id\\n      minBidIncrement\\n      bidWithdrawalLockTime\\n      platformFee\\n      platformFeeRecipient\\n      totalSales\\n    }\\n  }\\n\"])));\nexport const getResultedAuctionsByEndTimeGt = gql(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\n  query getAuctionsHistoryByTimestampGt($endTime: BigInt!) {\\n    digitalaxGarmentAuctions(\\n      first: 1000\\n      where: { resulted_not_in: [false], endTime_gt: $endTime }\\n    ) {\\n      id\\n      reservePrice\\n      endTime\\n      startTime\\n      resulted\\n      topBidder {\\n        id\\n      }\\n      topBid\\n      lastBidTime\\n    }\\n  }\\n\"])));\nexport const getDigitalaxGarmentsCollections = gql(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\\n  query getDigitalaxGarmentsCollections {\\n    digitalaxGarmentCollections(first: 1000) {\\n      id\\n      garmentAuctionID\\n      rarity\\n      garments(first: 1) {\\n        id\\n        designer\\n        owner\\n        primarySalePrice\\n        tokenUri\\n        name\\n        image\\n        animation\\n        children {\\n          id\\n          amount\\n          tokenUri\\n        }\\n      }\\n    }\\n  }\\n\"])));\nexport const getDigitalaxCollector = gql(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\\n  query digitalaxCollector($id: ID!) {\\n    digitalaxCollector(id: $id) {\\n      id\\n      parentsOwned {\\n        id\\n        description\\n        designer\\n        tokenUri\\n        animation\\n        image\\n        owner\\n        name\\n      }\\n    }\\n  }\\n\"])));\nexport const getCollectorsById = gql(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"\\n  query getCollectorsById($id: ID!) {\\n    digitalaxCollectors(where: { id: $id }) {\\n      id\\n      parentsOwned {\\n        id\\n        name\\n        image\\n        description\\n        animation\\n        tokenUri\\n        primarySalePrice\\n        attributes {\\n          id\\n          type\\n          value\\n        }\\n      }\\n    }\\n  }\\n\"])));\nexport const getDigitalaxMarketplacePurchaseHistory = gql(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"\\nquery digitalaxMarketplacePurchaseHistories($buyer: ID!, $garmentId: Int!) {\\n  digitalaxMarketplacePurchaseHistories(where: { buyer: $buyer, garmentAuctionId: $garmentId }){\\n    id\\n    eventName\\n    timestamp\\n    transactionHash\\n    token {\\n      id\\n    }\\n    buyer\\n    value\\n    isPaidWithMona\\n    monaTransferredAmount\\n    garmentAuctionId\\n    platformFee\\n    discountToPayMona\\n    rarity\\n  }\\n}\\n\"])));","map":{"version":3,"sources":["/Volumes/Data/Work/Digitalax/f3m-marketplace/src/services/api/gql.queries.api.service.js"],"names":["gql","HISTORY_BID_PLACED_EVENT","HISTORY_BID_WITHDRAWN_EVENT","getLiveAuctions","getAuctionsByIds","getGarmentsByIds","getDesignersByIds","getGarmentsByDesignerId","getAuctionsHistoryByIds","getAuctionsHistoryByTimestampGt","getAuctionContracts","getResultedAuctionsByEndTimeGt","getDigitalaxGarmentsCollections","getDigitalaxCollector","getCollectorsById","getDigitalaxMarketplacePurchaseHistory"],"mappings":";;;;AAAA,SAASA,GAAT,QAAoB,iBAApB;AACA,SACEC,wBADF,EAEEC,2BAFF,QAGO,8BAHP;AAKA,OAAO,MAAMC,eAAe,GAAGH,GAAH,6qBAArB;AAuCP,OAAO,MAAMI,gBAAgB,GAAGJ,GAAH,0VAAtB;AAiBP,OAAO,MAAMK,gBAAgB,GAAGL,GAAH,oVAAtB;AAiBP,OAAO,MAAMM,iBAAiB,GAAGN,GAAH,+cAAvB;AAuBP,OAAO,MAAMO,uBAAuB,GAAGP,GAAH,oWAA7B;AAiBP,OAAO,MAAMQ,uBAAuB,GAAGR,GAAH,4fAA7B;AA0BP,OAAO,MAAMS,+BAA+B,GAAGT,GAAH,oWAGpBC,wBAHoB,EAIlCC,2BAJkC,CAArC;AAcP,OAAO,MAAMQ,mBAAmB,GAAGV,GAAH,uQAAzB;AAaP,OAAO,MAAMW,8BAA8B,GAAGX,GAAH,saAApC;AAoBP,OAAO,MAAMY,+BAA+B,GAAGZ,GAAH,meAArC;AAyBP,OAAO,MAAMa,qBAAqB,GAAGb,GAAH,+UAA3B;AAkBP,OAAO,MAAMc,iBAAiB,GAAGd,GAAH,maAAvB;AAuBP,OAAO,MAAMe,sCAAsC,GAAGf,GAAH,2eAA5C","sourcesContent":["import { gql } from 'graphql-request';\nimport {\n  HISTORY_BID_PLACED_EVENT,\n  HISTORY_BID_WITHDRAWN_EVENT,\n} from '@constants/history.constants';\n\nexport const getLiveAuctions = gql`\n  {\n    digitalaxGarmentAuctions(first: 1000, where: { resulted_not_in: [true] }) {\n      id\n      reservePrice\n      endTime\n      startTime\n      resulted\n      topBidder {\n        id\n      }\n      topBid\n      lastBidTime\n      garment {\n        id\n        designer\n        primarySalePrice\n        tokenUri\n        name\n        image\n        animation\n        children {\n          amount\n          tokenUri\n          id\n        }\n      }\n      designer {\n        id\n      }\n      contract {\n        id\n        minBidIncrement\n        bidWithdrawalLockTime\n      }\n    }\n  }\n`;\n\nexport const getAuctionsByIds = gql`\n  query getAuctionsByIds($ids: [ID!]) {\n    digitalaxGarmentAuctions(first: 1000, where: { id_in: $ids }) {\n      id\n      reservePrice\n      endTime\n      startTime\n      resulted\n      topBidder {\n        id\n      }\n      topBid\n      lastBidTime\n    }\n  }\n`;\n\nexport const getGarmentsByIds = gql`\n  query getGarmentsByIds($ids: [ID!]) {\n    digitalaxGarments(first: 1000, where: { id_in: $ids }) {\n      id\n      designer\n      owner\n      primarySalePrice\n      tokenUri\n      children {\n        amount\n        tokenUri\n        id\n      }\n    }\n  }\n`;\n\nexport const getDesignersByIds = gql`\n  query getDesignersByIds($ids: [ID!]) {\n    digitalaxGarmentDesigners(first: 1000, where: { id_in: $ids }) {\n      id\n      garments(first: 1000) {\n        id\n        tokenUri\n      }\n      listings {\n        reservePrice\n        startTime\n        endTime\n        resulted\n        topBidder {\n          id\n        }\n        topBid\n        lastBidTime\n      }\n    }\n  }\n`;\n\nexport const getGarmentsByDesignerId = gql`\n  query getGarmentsByDesignerId($ids: [Bytes!]) {\n    digitalaxGarments(first: 1000, where: { designer_in: $ids }) {\n      id\n      designer\n      owner\n      primarySalePrice\n      tokenUri\n      children {\n        amount\n        tokenUri\n        id\n      }\n    }\n  }\n`;\n\nexport const getAuctionsHistoryByIds = gql`\n  query getAuctionsHistoryByIds($ids: [ID!]) {\n    digitalaxGarmentAuctionHistories(first: 1000, where: { token_in: $ids }) {\n      id\n      eventName\n      timestamp\n      transactionHash\n      bidder {\n        id\n      }\n      value\n      token {\n        id\n        owner\n        primarySalePrice\n        tokenUri\n        children {\n          id\n          amount\n          tokenUri\n        }\n      }\n    }\n  }\n`;\n\nexport const getAuctionsHistoryByTimestampGt = gql`\n  query getAuctionsHistoryByTimestampGt($timestamp: BigInt!) {\n    digitalaxGarmentAuctionHistories(first: 1000, where: {\n      eventName_in: [\"${HISTORY_BID_PLACED_EVENT}\",\n       \"${HISTORY_BID_WITHDRAWN_EVENT}\"], \n       timestamp_gt: $timestamp}) {\n      id\n      eventName\n      timestamp\n      value\n    }\n  }\n`;\n\nexport const getAuctionContracts = gql`\n  {\n    digitalaxAuctionContracts(first: 1000) {\n      id\n      minBidIncrement\n      bidWithdrawalLockTime\n      platformFee\n      platformFeeRecipient\n      totalSales\n    }\n  }\n`;\n\nexport const getResultedAuctionsByEndTimeGt = gql`\n  query getAuctionsHistoryByTimestampGt($endTime: BigInt!) {\n    digitalaxGarmentAuctions(\n      first: 1000\n      where: { resulted_not_in: [false], endTime_gt: $endTime }\n    ) {\n      id\n      reservePrice\n      endTime\n      startTime\n      resulted\n      topBidder {\n        id\n      }\n      topBid\n      lastBidTime\n    }\n  }\n`;\n\nexport const getDigitalaxGarmentsCollections = gql`\n  query getDigitalaxGarmentsCollections {\n    digitalaxGarmentCollections(first: 1000) {\n      id\n      garmentAuctionID\n      rarity\n      garments(first: 1) {\n        id\n        designer\n        owner\n        primarySalePrice\n        tokenUri\n        name\n        image\n        animation\n        children {\n          id\n          amount\n          tokenUri\n        }\n      }\n    }\n  }\n`;\n\nexport const getDigitalaxCollector = gql`\n  query digitalaxCollector($id: ID!) {\n    digitalaxCollector(id: $id) {\n      id\n      parentsOwned {\n        id\n        description\n        designer\n        tokenUri\n        animation\n        image\n        owner\n        name\n      }\n    }\n  }\n`;\n\nexport const getCollectorsById = gql`\n  query getCollectorsById($id: ID!) {\n    digitalaxCollectors(where: { id: $id }) {\n      id\n      parentsOwned {\n        id\n        name\n        image\n        description\n        animation\n        tokenUri\n        primarySalePrice\n        attributes {\n          id\n          type\n          value\n        }\n      }\n    }\n  }\n`;\n\n\nexport const getDigitalaxMarketplacePurchaseHistory = gql`\nquery digitalaxMarketplacePurchaseHistories($buyer: ID!, $garmentId: Int!) {\n  digitalaxMarketplacePurchaseHistories(where: { buyer: $buyer, garmentAuctionId: $garmentId }){\n    id\n    eventName\n    timestamp\n    transactionHash\n    token {\n      id\n    }\n    buyer\n    value\n    isPaidWithMona\n    monaTransferredAmount\n    garmentAuctionId\n    platformFee\n    discountToPayMona\n    rarity\n  }\n}\n`;\n"]},"metadata":{},"sourceType":"module"}