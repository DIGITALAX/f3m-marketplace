{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/Work/Digitalax/f3m-marketplace/src/containers/modals/modal-current-wearers/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './styles.module.scss';\nimport Modal from '@components/modal';\nimport Loader from '@components/loader';\nimport { closeCurrentWearersModal } from '@actions/modals.actions';\nimport { getModalParams } from '@selectors/modal.selectors';\nimport { getChainId, getAllUsers } from '@selectors/global.selectors';\nimport { getDigitalaxGarmentPurchaseHistories, getDigitalaxGarmentV2PurchaseHistories, getDigitalaxMarketplacePurchaseHistories, getDigitalaxMarketplaceV2PurchaseHistories, getDigitalaxGarmentV2s, getDigitalaxNFTStakersByGarments, getGuildWhitelistedNFTStakersByGarments } from '@services/api/apiService';\nimport digitalaxApi from '@services/api/espa/api.service';\nimport config from '@utils/config';\nconst POLYGON_CHAINID = 0x89;\n\nconst getAllResultsFromQuery = async (query, resultKey, chainId, owner) => {\n  let lastID = '';\n  let isContinue = true;\n  const fetchCountPerOnce = 1000;\n  const resultArray = [];\n\n  while (isContinue) {\n    const result = await query(chainId, owner, fetchCountPerOnce, lastID);\n    if (!result[resultKey] || result[resultKey].length <= 0) isContinue = false;else {\n      resultArray.push(...result[resultKey]);\n\n      if (result[resultKey].length < fetchCountPerOnce) {\n        isContinue = false;\n      } else {\n        lastID = result[resultKey][fetchCountPerOnce - 1]['id'];\n      }\n    }\n  }\n\n  return resultArray;\n};\n\nconst ModalCurrentWearers = ({\n  className,\n  title\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    tokenIds,\n    v1,\n    type\n  } = useSelector(getModalParams);\n  const chainId = useSelector(getChainId); // const [history, setHistory] = useState([]);\n\n  const {\n    0: wearers,\n    1: setWearers\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n\n  const handleClose = () => {\n    dispatch(closeCurrentWearersModal());\n  };\n\n  const allUsers = useSelector(getAllUsers).toJS();\n  useEffect(() => {\n    if (tokenIds.length) {\n      const fetchHistories = async () => {\n        let soldItems = [];\n        let historyItems = [];\n\n        if (type === 1) {\n          if (parseInt(tokenIds[0]) <= 4) {\n            const {\n              digitalaxGarmentAuctionHistories\n            } = await getDigitalaxGarmentPurchaseHistories(chainId, tokenIds[0]);\n            soldItems = digitalaxGarmentAuctionHistories.map(item => item.token.id);\n            historyItems = digitalaxGarmentAuctionHistories;\n          } else {\n            const {\n              digitalaxGarmentV2AuctionHistories\n            } = await getDigitalaxGarmentV2PurchaseHistories(chainId, tokenIds[0]);\n            soldItems = digitalaxGarmentV2AuctionHistories.map(item => item.token.id);\n            historyItems = digitalaxGarmentV2AuctionHistories;\n          }\n\n          setLoading(false);\n        } else {\n          if (!v1) {\n            const {\n              digitalaxMarketplaceV2PurchaseHistories\n            } = await getDigitalaxMarketplaceV2PurchaseHistories(chainId, tokenIds);\n            soldItems = digitalaxMarketplaceV2PurchaseHistories.map(item => item.id);\n            historyItems = digitalaxMarketplaceV2PurchaseHistories;\n          } else {\n            const {\n              digitalaxMarketplacePurchaseHistories\n            } = await getDigitalaxMarketplacePurchaseHistories(chainId, tokenIds);\n            soldItems = digitalaxMarketplacePurchaseHistories.map(item => item.id);\n            historyItems = digitalaxMarketplacePurchaseHistories;\n          }\n        }\n\n        const {\n          digitalaxGarmentV2S\n        } = await getDigitalaxGarmentV2s(chainId, soldItems);\n        const digitalaxAllNFTStakersByGarments = await getAllResultsFromQuery(getDigitalaxNFTStakersByGarments, 'digitalaxNFTStakers', POLYGON_CHAINID, soldItems);\n        const guildAllNFTStakersByGarments = await getAllResultsFromQuery(getGuildWhitelistedNFTStakersByGarments, 'guildWhitelistedNFTStakers', POLYGON_CHAINID, soldItems.map(item => config.DTX_ADDRESSES['matic'].toLowerCase() + '-' + item));\n        const digitalaxStakedGarments = {};\n        digitalaxAllNFTStakersByGarments.filter(item => item.garments && item.garments.length > 0).map(staker => {\n          staker.garments.forEach(garment => {\n            digitalaxStakedGarments[garment.id] = staker.id;\n          });\n        });\n        guildAllNFTStakersByGarments.filter(item => item.garments && item.garments.length > 0).map(staker => {\n          staker.garments.forEach(garment => {\n            digitalaxStakedGarments[garment.id.split('-')[1]] = staker.id;\n          });\n        });\n        setWearers(digitalaxGarmentV2S.map(garment => {\n          let actualOwner = garment.owner.toLowerCase();\n\n          if (digitalaxStakedGarments && digitalaxStakedGarments[garment.id]) {\n            actualOwner = digitalaxStakedGarments[garment.id].toLowerCase();\n          }\n\n          const user = allUsers.find(user => user.wallet && user.wallet.toLowerCase() == actualOwner);\n          const history = historyItems.find(history => (type ? history.token.id : history.id) == garment.id && (type ? history.bidder.id : history.buyer).toLowerCase() == actualOwner);\n          return {\n            id: garment.id,\n            owner: actualOwner,\n            ownerAvatar: user ? user.avatar : null,\n            ownerName: user ? user.username : null,\n            timestamp: history ? history.timestamp : 0,\n            transactionHash: history ? history.transactionHash : null\n          };\n        }));\n        setLoading(false);\n      };\n\n      fetchHistories();\n    }\n  }, []);\n\n  const sortByTime = data => {\n    return data.sort((a, b) => {\n      if (parseInt(a.timestamp) == parseInt(b.timestamp)) return 0;\n      if (parseInt(a.timestamp) == 0) return 1;\n      if (parseInt(b.timestamp) == 0) return -1;\n      if (parseInt(a.timestamp) > parseInt(b.timestamp)) return 1;\n      return -1;\n    });\n  };\n\n  const onClickWearer = ownerInfo => {\n    if (ownerInfo.ownerName !== null) {\n      window.open(\"/user/\".concat(ownerInfo.owner), '_self');\n    }\n  };\n\n  return __jsx(React.Fragment, null, loading ? __jsx(Loader, {\n    active: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }) : __jsx(React.Fragment, null, /*#__PURE__*/createPortal(__jsx(Modal, {\n    onClose: () => handleClose(),\n    title: \"\".concat(title),\n    titleStyle: styles.textCenter,\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: styles.tableWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, __jsx(\"table\", {\n    className: styles.historyTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, \" Meta ID \"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, \" Purchase Date \"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, \" Transaction ID \")), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  }, sortByTime(wearers).map((ownerInfo, index) => __jsx(\"tr\", {\n    key: index,\n    onClick: () => onClickWearer(ownerInfo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 23\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, __jsx(\"img\", {\n    className: styles.ownerAvatar,\n    src: \"\".concat(ownerInfo.ownerAvatar ? ownerInfo.ownerAvatar : '/images/user-profile/user-avatar-black.png'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 27\n    }\n  })), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }, ' ', ownerInfo.ownerName ? ownerInfo.ownerName : \"\".concat(ownerInfo.owner.slice(0, 8), \"...\")), ownerInfo.ownerName ? __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 29\n    }\n  }, \" \", ownerInfo.timestamp ? new Date(parseInt(ownerInfo.timestamp) * 1000).toDateString() : '', \" \") : __jsx(\"td\", {\n    colspan: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 29\n    }\n  }, \" No active account with DIGITALAX \"), ownerInfo.ownerName && __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 29\n    }\n  }, \" \", ownerInfo.transactionHash ? \"\".concat(ownerInfo.transactionHash.slice(0, 8), \"...\") : '', \" \"))), !wearers.length && __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 41\n    }\n  }, \" \", __jsx(\"td\", {\n    colSpan: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 46\n    }\n  }, \"No Wearers\"), \" \"))))), document.body)));\n};\n\n_s(ModalCurrentWearers, \"ZxcjNJ+PxuDny3+qmfXqWL0UqEk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ModalCurrentWearers;\nModalCurrentWearers.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string\n};\nModalCurrentWearers.defaultProps = {\n  className: '',\n  title: 'Current Wearers'\n};\nexport default ModalCurrentWearers;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalCurrentWearers\");","map":{"version":3,"sources":["/Volumes/Data/Work/Digitalax/f3m-marketplace/src/containers/modals/modal-current-wearers/index.js"],"names":["React","useEffect","useState","PropTypes","createPortal","useDispatch","useSelector","styles","Modal","Loader","closeCurrentWearersModal","getModalParams","getChainId","getAllUsers","getDigitalaxGarmentPurchaseHistories","getDigitalaxGarmentV2PurchaseHistories","getDigitalaxMarketplacePurchaseHistories","getDigitalaxMarketplaceV2PurchaseHistories","getDigitalaxGarmentV2s","getDigitalaxNFTStakersByGarments","getGuildWhitelistedNFTStakersByGarments","digitalaxApi","config","POLYGON_CHAINID","getAllResultsFromQuery","query","resultKey","chainId","owner","lastID","isContinue","fetchCountPerOnce","resultArray","result","length","push","ModalCurrentWearers","className","title","dispatch","tokenIds","v1","type","wearers","setWearers","loading","setLoading","handleClose","allUsers","toJS","fetchHistories","soldItems","historyItems","parseInt","digitalaxGarmentAuctionHistories","map","item","token","id","digitalaxGarmentV2AuctionHistories","digitalaxMarketplaceV2PurchaseHistories","digitalaxMarketplacePurchaseHistories","digitalaxGarmentV2S","digitalaxAllNFTStakersByGarments","guildAllNFTStakersByGarments","DTX_ADDRESSES","toLowerCase","digitalaxStakedGarments","filter","garments","staker","forEach","garment","split","actualOwner","user","find","wallet","history","bidder","buyer","ownerAvatar","avatar","ownerName","username","timestamp","transactionHash","sortByTime","data","sort","a","b","onClickWearer","ownerInfo","window","open","textCenter","tableWrapper","historyTable","index","slice","Date","toDateString","document","body","propTypes","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './styles.module.scss';\n\nimport Modal from '@components/modal';\nimport Loader from '@components/loader';\nimport {\n  closeCurrentWearersModal,\n} from '@actions/modals.actions';\nimport { getModalParams } from '@selectors/modal.selectors';\nimport { getChainId, getAllUsers } from '@selectors/global.selectors';\nimport {\n  getDigitalaxGarmentPurchaseHistories,\n  getDigitalaxGarmentV2PurchaseHistories,\n  getDigitalaxMarketplacePurchaseHistories,\n  getDigitalaxMarketplaceV2PurchaseHistories,\n  getDigitalaxGarmentV2s,\n  getDigitalaxNFTStakersByGarments,\n  getGuildWhitelistedNFTStakersByGarments\n} from '@services/api/apiService';\nimport digitalaxApi from '@services/api/espa/api.service'\nimport config from '@utils/config'\nconst POLYGON_CHAINID = 0x89\n\nconst getAllResultsFromQuery = async (query, resultKey, chainId, owner) => {\n  let lastID = ''\n  let isContinue = true\n  const fetchCountPerOnce = 1000\n\n  const resultArray = []\n  while (isContinue) {\n    const result = await query(chainId, owner, fetchCountPerOnce, lastID)\n    if (!result[resultKey] || result[resultKey].length <= 0) isContinue = false\n    else {\n      resultArray.push(...result[resultKey])\n      if (result[resultKey].length < fetchCountPerOnce) {\n        isContinue = false\n      } else {\n        lastID = result[resultKey][fetchCountPerOnce - 1]['id']\n      }\n    }\n  }\n  \n  return resultArray\n}\n\nconst ModalCurrentWearers = ({ className, title }) => {\n  const dispatch = useDispatch();\n  const { tokenIds, v1, type } = useSelector(getModalParams);\n  const chainId = useSelector(getChainId);\n  // const [history, setHistory] = useState([]);\n  const [wearers, setWearers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const handleClose = () => {\n    dispatch(closeCurrentWearersModal())\n  };\n\n  const allUsers = useSelector(getAllUsers).toJS();\n\n  useEffect(() => {\n    if (tokenIds.length) {\n      const fetchHistories = async () => {\n        let soldItems = []\n        let historyItems = []\n\n        if (type === 1) {\n          if (parseInt(tokenIds[0]) <= 4) {\n            const { digitalaxGarmentAuctionHistories } =\n              await getDigitalaxGarmentPurchaseHistories(chainId, tokenIds[0]);\n            soldItems = digitalaxGarmentAuctionHistories.map(item => item.token.id)\n            historyItems = digitalaxGarmentAuctionHistories\n          } else {\n            const { digitalaxGarmentV2AuctionHistories } =\n              await getDigitalaxGarmentV2PurchaseHistories(chainId, tokenIds[0]);\n            soldItems = digitalaxGarmentV2AuctionHistories.map(item => item.token.id)\n            historyItems = digitalaxGarmentV2AuctionHistories\n          }\n          setLoading(false);\n        } else {\n          if (!v1) {\n            const { digitalaxMarketplaceV2PurchaseHistories } =\n              await getDigitalaxMarketplaceV2PurchaseHistories(chainId, tokenIds);\n            soldItems = digitalaxMarketplaceV2PurchaseHistories.map(item => item.id)\n            historyItems = digitalaxMarketplaceV2PurchaseHistories\n          } else {\n            const { digitalaxMarketplacePurchaseHistories } = await getDigitalaxMarketplacePurchaseHistories(chainId, tokenIds);\n            soldItems = digitalaxMarketplacePurchaseHistories.map(item => item.id)\n            historyItems = digitalaxMarketplacePurchaseHistories\n          }\n        }\n\n        const { digitalaxGarmentV2S } = await getDigitalaxGarmentV2s(chainId, soldItems)\n\n        const digitalaxAllNFTStakersByGarments = await getAllResultsFromQuery(\n          getDigitalaxNFTStakersByGarments, \n          'digitalaxNFTStakers', \n          POLYGON_CHAINID,\n          soldItems\n        )\n\n        const guildAllNFTStakersByGarments = await getAllResultsFromQuery(\n          getGuildWhitelistedNFTStakersByGarments, \n          'guildWhitelistedNFTStakers', \n          POLYGON_CHAINID,\n          soldItems.map(item => config.DTX_ADDRESSES['matic'].toLowerCase() + '-' + item)\n        )\n\n        const digitalaxStakedGarments = {}\n        digitalaxAllNFTStakersByGarments\n          .filter(\n            item => item.garments && item.garments.length > 0\n          )\n          .map(staker => {\n            staker.garments.forEach(garment => {\n              digitalaxStakedGarments[garment.id] = staker.id\n            })\n          })\n        \n        guildAllNFTStakersByGarments\n          .filter(\n            item => item.garments && item.garments.length > 0\n          )\n          .map(staker => {\n            staker.garments.forEach(garment => {\n              digitalaxStakedGarments[garment.id.split('-')[1]] = staker.id\n            })\n          })\n        setWearers(digitalaxGarmentV2S.map(garment => {\n          \n          let actualOwner = garment.owner.toLowerCase()\n          if (digitalaxStakedGarments && digitalaxStakedGarments[garment.id]) {\n            actualOwner = digitalaxStakedGarments[garment.id].toLowerCase()\n          }\n\n          const user = allUsers.find(user => user.wallet && user.wallet.toLowerCase() == actualOwner)\n          const history = historyItems.find(\n            history =>\n              (type ? history.token.id : history.id) == garment.id \n              && (type ? history.bidder.id : history.buyer).toLowerCase() == actualOwner\n          )\n\n          return {\n            id: garment.id,\n            owner: actualOwner,\n            ownerAvatar: user ? user.avatar : null,\n            ownerName: user ? user.username: null,\n            timestamp: history ? history.timestamp : 0,\n            transactionHash: history ? history.transactionHash : null\n          }\n        }))\n        setLoading(false);        \n      };\n\n      fetchHistories();\n    }\n  }, []);\n\n  const sortByTime = (data) => {\n    return data.sort((a, b) => {\n      if (parseInt(a.timestamp) == parseInt(b.timestamp)) return 0;\n      if (parseInt(a.timestamp) == 0) return 1;\n      if (parseInt(b.timestamp) == 0) return -1;\n      if (parseInt(a.timestamp) > parseInt(b.timestamp)) return 1;\n      return -1;\n    })\n  }\n\n  const onClickWearer = ownerInfo => {\n    if (ownerInfo.ownerName !== null) {\n      window.open(`/user/${ownerInfo.owner}`, '_self')\n    }\n  }\n\n  return (\n    <>\n      {loading ? (\n        <Loader active={loading} />\n      ) : (\n        <>\n          {createPortal(\n            <Modal\n              onClose={() => handleClose()}\n              title={`${title}`}\n              titleStyle={styles.textCenter}\n              className={className}\n            >\n              <div className={styles.tableWrapper}>\n                <table className={styles.historyTable}>\n                  <thead>\n                    <th></th>\n                    <th> Meta ID </th>\n                    <th> Purchase Date </th>\n                    <th> Transaction ID </th>\n                  </thead>\n                  <tbody>\n                    {sortByTime(wearers).map((ownerInfo, index) => (\n                      <tr key={index} onClick={() => onClickWearer(ownerInfo)}>\n                        <td>\n                          <img\n                            className={styles.ownerAvatar}\n                            src={`${ownerInfo.ownerAvatar ? ownerInfo.ownerAvatar : '/images/user-profile/user-avatar-black.png'}`}\n                          />\n                        </td>\n                        <td>\n                          {' '}\n                          {ownerInfo.ownerName ? ownerInfo.ownerName : `${ownerInfo.owner.slice(0, 8)}...`}\n                        </td>\n                        {\n                          ownerInfo.ownerName\n                          ? (\n                            <td> {ownerInfo.timestamp ? new Date(parseInt(ownerInfo.timestamp) * 1000).toDateString() : ''} </td>\n                          )\n                          : (\n                            <td colspan='2'> No active account with DIGITALAX </td>\n                          )\n                        }\n                        {\n                          ownerInfo.ownerName\n                          && (\n                            <td> {ownerInfo.transactionHash ? `${ownerInfo.transactionHash.slice(0, 8)}...` : ''} </td>\n                          )\n                        }\n                         \n                      </tr>\n                    ))}\n                    {!wearers.length && <tr> <td colSpan=\"4\">No Wearers</td> </tr>}\n                  </tbody>\n                </table>\n              </div>\n            </Modal>,\n            document.body,\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nModalCurrentWearers.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string\n};\n\nModalCurrentWearers.defaultProps = {\n  className: '',\n  title: 'Current Wearers'\n};\n\nexport default ModalCurrentWearers;\n"]},"metadata":{},"sourceType":"module"}