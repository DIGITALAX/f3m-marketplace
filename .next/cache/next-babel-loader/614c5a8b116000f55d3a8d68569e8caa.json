{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14;\n\nimport { gql } from 'graphql-request';\nimport { HISTORY_BID_PLACED_EVENT, HISTORY_BID_WITHDRAWN_EVENT } from '@constants/history.constants';\nexport const getLiveAuctionsV2 = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  {\\n    digitalaxGarmentV2Auctions(first: 1000, where: { resulted_not_in: [true] }) {\\n      id\\n      reservePrice\\n      endTime\\n      startTime\\n      resulted\\n      topBidder {\\n        id\\n      }\\n      topBid\\n      lastBidTime\\n      garment {\\n        id\\n        designer\\n        primarySalePrice\\n        tokenUri\\n        name\\n        image\\n        animation\\n        children {\\n          amount\\n          tokenUri\\n          id\\n        }\\n      }\\n      designer {\\n        id\\n      }\\n      contract {\\n        id\\n        minBidIncrement\\n        bidWithdrawalLockTime\\n      }\\n    }\\n  }\\n\"])));\nexport const getAuctionsByIdsV2 = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  query getAuctionsByIds($ids: [ID!]) {\\n    digitalaxGarmentV2Auctions(first: 1000, where: { id_in: $ids }) {\\n      id\\n      reservePrice\\n      endTime\\n      startTime\\n      resulted\\n      topBidder {\\n        id\\n      }\\n      topBid\\n      lastBidTime\\n    }\\n  }\\n\"])));\nexport const getGarmentsByIdsV2 = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  query getGarmentsByIds($ids: [ID!]) {\\n    digitalaxGarmentV2S(first: 1000, where: { id_in: $ids }) {\\n      id\\n      designer\\n      owner\\n      primarySalePrice\\n      tokenUri\\n      children {\\n        amount\\n        tokenUri\\n        id\\n      }\\n    }\\n  }\\n\"])));\nexport const getDesignersByIdsV2 = gql(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  query getDesignersByIds($ids: [ID!]) {\\n    digitalaxGarmentV2Designers(first: 1000, where: { id_in: $ids }) {\\n      id\\n      garments(first: 1000) {\\n        id\\n        tokenUri\\n      }\\n      listings {\\n        reservePrice\\n        startTime\\n        endTime\\n        resulted\\n        topBidder {\\n          id\\n        }\\n        topBid\\n        lastBidTime\\n      }\\n    }\\n  }\\n\"])));\nexport const getGarmentsByDesignerIdV2 = gql(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  query getGarmentsByDesignerId($ids: [Bytes!]) {\\n    digitalaxGarmentV2S(first: 1000, where: { designer_in: $ids }) {\\n      id\\n      designer\\n      owner\\n      primarySalePrice\\n      tokenUri\\n      children {\\n        amount\\n        tokenUri\\n        id\\n      }\\n    }\\n  }\\n\"])));\nexport const getAuctionsHistoryByIdsV2 = gql(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n  query getAuctionsHistoryByIds($ids: [ID!]) {\\n    digitalaxGarmentV2AuctionHistories(first: 1000, where: { token_in: $ids }) {\\n      id\\n      eventName\\n      timestamp\\n      transactionHash\\n      bidder {\\n        id\\n      }\\n      value\\n      token {\\n        id\\n        owner\\n        primarySalePrice\\n        tokenUri\\n        children {\\n          id\\n          amount\\n          tokenUri\\n        }\\n      }\\n    }\\n  }\\n\"])));\nexport const getAuctionsHistoryByTimestampGtV2 = gql(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n  query getAuctionsHistoryByTimestampGt($timestamp: BigInt!) {\\n    digitalaxGarmentV2AuctionHistories(first: 1000, where: {\\n      eventName_in: [\\\"\", \"\\\",\\n       \\\"\", \"\\\"], \\n       timestamp_gt: $timestamp}) {\\n      id\\n      eventName\\n      timestamp\\n      value\\n    }\\n  }\\n\"])), HISTORY_BID_PLACED_EVENT, HISTORY_BID_WITHDRAWN_EVENT);\nexport const getAuctionContractsV2 = gql(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n  {\\n    digitalaxAuctionV2Contracts(first: 1000) {\\n      id\\n      minBidIncrement\\n      bidWithdrawalLockTime\\n      platformFee\\n      platformFeeRecipient\\n      totalSales\\n    }\\n  }\\n\"])));\nexport const getResultedAuctionsByEndTimeGtV2 = gql(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\n  query getAuctionsHistoryByTimestampGt($endTime: BigInt!) {\\n    digitalaxGarmentV2Auctions(\\n      first: 1000\\n      where: { resulted_not_in: [false], endTime_gt: $endTime }\\n    ) {\\n      id\\n      reservePrice\\n      endTime\\n      startTime\\n      resulted\\n      topBidder {\\n        id\\n      }\\n      topBid\\n      lastBidTime\\n    }\\n  }\\n\"])));\nexport const getDigitalaxCollectorV2 = gql(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\\n  query digitalaxCollector($id: ID!) {\\n    digitalaxCollectorV2(id: $id) {\\n      id\\n      parentsOwned {\\n        id\\n        description\\n        designer\\n        tokenUri\\n        animation\\n        image\\n        owner\\n        name\\n      }\\n    }\\n  }\\n\"])));\nexport const getDigitalaxGarmentsCollectionsV2 = gql(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\\n  query getdigitalaxGarmentsCollections {\\n    digitalaxGarmentV2Collections(first: 1000) {\\n      id\\n      garmentAuctionID\\n      rarity\\n      garments(first: 1) {\\n        id\\n        designer\\n        owner\\n        primarySalePrice\\n        tokenUri\\n        name\\n        image\\n        animation\\n        children {\\n          id\\n          amount\\n          tokenUri\\n        }\\n      }\\n    }\\n  }\\n\"])));\nexport const getCollectorsByIdV2 = gql(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"\\n  query getCollectorsById($id: ID!) {\\n    digitalaxCollectorV2S(where: { id: $id }) {\\n      id\\n      parentsOwned {\\n        id\\n        name\\n        image\\n        description\\n        animation\\n        tokenUri\\n        primarySalePrice\\n        attributes {\\n          id\\n          type\\n          value\\n        }\\n      }\\n    }\\n  }\\n\"])));\nexport const getDigitalaxMarketplaceV2PurchaseHistory = gql(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"\\n  query digitalaxMarketplaceV2PurchaseHistories($buyer: ID!, $garmentId: Int!) {\\n    digitalaxMarketplaceV2PurchaseHistories(\\n      where: { buyer: $buyer, garmentAuctionId: $garmentId }\\n    ) {\\n      id\\n      eventName\\n      timestamp\\n      transactionHash\\n      token {\\n        id\\n      }\\n      buyer\\n      value\\n      isPaidWithMona\\n      monaTransferredAmount\\n      garmentAuctionId\\n      platformFee\\n      discountToPayMona\\n      rarity\\n    }\\n  }\\n\"])));\nexport const getDigitalaxGarmentNFTV2GlobalStat = gql(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\"\\n  query digitalaxGarmentNFTV2GlobalStats {\\n    digitalaxGarmentNFTV2GlobalStats(first: 1) {\\n      id\\n      monaPerEth\\n    }\\n  }\\n\"])));","map":{"version":3,"sources":["/Volumes/Data/Work/Digitalax/f3m-marketplace/src/services/api/gql.queries.v2.api.service.js"],"names":["gql","HISTORY_BID_PLACED_EVENT","HISTORY_BID_WITHDRAWN_EVENT","getLiveAuctionsV2","getAuctionsByIdsV2","getGarmentsByIdsV2","getDesignersByIdsV2","getGarmentsByDesignerIdV2","getAuctionsHistoryByIdsV2","getAuctionsHistoryByTimestampGtV2","getAuctionContractsV2","getResultedAuctionsByEndTimeGtV2","getDigitalaxCollectorV2","getDigitalaxGarmentsCollectionsV2","getCollectorsByIdV2","getDigitalaxMarketplaceV2PurchaseHistory","getDigitalaxGarmentNFTV2GlobalStat"],"mappings":";;;;AAAA,SAASA,GAAT,QAAoB,iBAApB;AACA,SACEC,wBADF,EAEEC,2BAFF,QAGO,8BAHP;AAKA,OAAO,MAAMC,iBAAiB,GAAGH,GAAH,+qBAAvB;AAuCP,OAAO,MAAMI,kBAAkB,GAAGJ,GAAH,4VAAxB;AAiBP,OAAO,MAAMK,kBAAkB,GAAGL,GAAH,sVAAxB;AAiBP,OAAO,MAAMM,mBAAmB,GAAGN,GAAH,idAAzB;AAuBP,OAAO,MAAMO,yBAAyB,GAAGP,GAAH,sWAA/B;AAiBP,OAAO,MAAMQ,yBAAyB,GAAGR,GAAH,8fAA/B;AA0BP,OAAO,MAAMS,iCAAiC,GAAGT,GAAH,sWAGtBC,wBAHsB,EAIpCC,2BAJoC,CAAvC;AAcP,OAAO,MAAMQ,qBAAqB,GAAGV,GAAH,yQAA3B;AAaP,OAAO,MAAMW,gCAAgC,GAAGX,GAAH,waAAtC;AAoBP,OAAO,MAAMY,uBAAuB,GAAGZ,GAAH,iVAA7B;AAkBP,OAAO,MAAMa,iCAAiC,GAAGb,GAAH,qeAAvC;AAyBP,OAAO,MAAMc,mBAAmB,GAAGd,GAAH,qaAAzB;AAsBP,OAAO,MAAMe,wCAAwC,GAAGf,GAAH,oiBAA9C;AAwBP,OAAO,MAAMgB,kCAAkC,GAAGhB,GAAH,iNAAxC","sourcesContent":["import { gql } from 'graphql-request';\nimport {\n  HISTORY_BID_PLACED_EVENT,\n  HISTORY_BID_WITHDRAWN_EVENT,\n} from '@constants/history.constants';\n\nexport const getLiveAuctionsV2 = gql`\n  {\n    digitalaxGarmentV2Auctions(first: 1000, where: { resulted_not_in: [true] }) {\n      id\n      reservePrice\n      endTime\n      startTime\n      resulted\n      topBidder {\n        id\n      }\n      topBid\n      lastBidTime\n      garment {\n        id\n        designer\n        primarySalePrice\n        tokenUri\n        name\n        image\n        animation\n        children {\n          amount\n          tokenUri\n          id\n        }\n      }\n      designer {\n        id\n      }\n      contract {\n        id\n        minBidIncrement\n        bidWithdrawalLockTime\n      }\n    }\n  }\n`;\n\nexport const getAuctionsByIdsV2 = gql`\n  query getAuctionsByIds($ids: [ID!]) {\n    digitalaxGarmentV2Auctions(first: 1000, where: { id_in: $ids }) {\n      id\n      reservePrice\n      endTime\n      startTime\n      resulted\n      topBidder {\n        id\n      }\n      topBid\n      lastBidTime\n    }\n  }\n`;\n\nexport const getGarmentsByIdsV2 = gql`\n  query getGarmentsByIds($ids: [ID!]) {\n    digitalaxGarmentV2S(first: 1000, where: { id_in: $ids }) {\n      id\n      designer\n      owner\n      primarySalePrice\n      tokenUri\n      children {\n        amount\n        tokenUri\n        id\n      }\n    }\n  }\n`;\n\nexport const getDesignersByIdsV2 = gql`\n  query getDesignersByIds($ids: [ID!]) {\n    digitalaxGarmentV2Designers(first: 1000, where: { id_in: $ids }) {\n      id\n      garments(first: 1000) {\n        id\n        tokenUri\n      }\n      listings {\n        reservePrice\n        startTime\n        endTime\n        resulted\n        topBidder {\n          id\n        }\n        topBid\n        lastBidTime\n      }\n    }\n  }\n`;\n\nexport const getGarmentsByDesignerIdV2 = gql`\n  query getGarmentsByDesignerId($ids: [Bytes!]) {\n    digitalaxGarmentV2S(first: 1000, where: { designer_in: $ids }) {\n      id\n      designer\n      owner\n      primarySalePrice\n      tokenUri\n      children {\n        amount\n        tokenUri\n        id\n      }\n    }\n  }\n`;\n\nexport const getAuctionsHistoryByIdsV2 = gql`\n  query getAuctionsHistoryByIds($ids: [ID!]) {\n    digitalaxGarmentV2AuctionHistories(first: 1000, where: { token_in: $ids }) {\n      id\n      eventName\n      timestamp\n      transactionHash\n      bidder {\n        id\n      }\n      value\n      token {\n        id\n        owner\n        primarySalePrice\n        tokenUri\n        children {\n          id\n          amount\n          tokenUri\n        }\n      }\n    }\n  }\n`;\n\nexport const getAuctionsHistoryByTimestampGtV2 = gql`\n  query getAuctionsHistoryByTimestampGt($timestamp: BigInt!) {\n    digitalaxGarmentV2AuctionHistories(first: 1000, where: {\n      eventName_in: [\"${HISTORY_BID_PLACED_EVENT}\",\n       \"${HISTORY_BID_WITHDRAWN_EVENT}\"], \n       timestamp_gt: $timestamp}) {\n      id\n      eventName\n      timestamp\n      value\n    }\n  }\n`;\n\nexport const getAuctionContractsV2 = gql`\n  {\n    digitalaxAuctionV2Contracts(first: 1000) {\n      id\n      minBidIncrement\n      bidWithdrawalLockTime\n      platformFee\n      platformFeeRecipient\n      totalSales\n    }\n  }\n`;\n\nexport const getResultedAuctionsByEndTimeGtV2 = gql`\n  query getAuctionsHistoryByTimestampGt($endTime: BigInt!) {\n    digitalaxGarmentV2Auctions(\n      first: 1000\n      where: { resulted_not_in: [false], endTime_gt: $endTime }\n    ) {\n      id\n      reservePrice\n      endTime\n      startTime\n      resulted\n      topBidder {\n        id\n      }\n      topBid\n      lastBidTime\n    }\n  }\n`;\n\nexport const getDigitalaxCollectorV2 = gql`\n  query digitalaxCollector($id: ID!) {\n    digitalaxCollectorV2(id: $id) {\n      id\n      parentsOwned {\n        id\n        description\n        designer\n        tokenUri\n        animation\n        image\n        owner\n        name\n      }\n    }\n  }\n`;\n\nexport const getDigitalaxGarmentsCollectionsV2 = gql`\n  query getdigitalaxGarmentsCollections {\n    digitalaxGarmentV2Collections(first: 1000) {\n      id\n      garmentAuctionID\n      rarity\n      garments(first: 1) {\n        id\n        designer\n        owner\n        primarySalePrice\n        tokenUri\n        name\n        image\n        animation\n        children {\n          id\n          amount\n          tokenUri\n        }\n      }\n    }\n  }\n`;\n\nexport const getCollectorsByIdV2 = gql`\n  query getCollectorsById($id: ID!) {\n    digitalaxCollectorV2S(where: { id: $id }) {\n      id\n      parentsOwned {\n        id\n        name\n        image\n        description\n        animation\n        tokenUri\n        primarySalePrice\n        attributes {\n          id\n          type\n          value\n        }\n      }\n    }\n  }\n`;\n\nexport const getDigitalaxMarketplaceV2PurchaseHistory = gql`\n  query digitalaxMarketplaceV2PurchaseHistories($buyer: ID!, $garmentId: Int!) {\n    digitalaxMarketplaceV2PurchaseHistories(\n      where: { buyer: $buyer, garmentAuctionId: $garmentId }\n    ) {\n      id\n      eventName\n      timestamp\n      transactionHash\n      token {\n        id\n      }\n      buyer\n      value\n      isPaidWithMona\n      monaTransferredAmount\n      garmentAuctionId\n      platformFee\n      discountToPayMona\n      rarity\n    }\n  }\n`;\n\nexport const getDigitalaxGarmentNFTV2GlobalStat = gql`\n  query digitalaxGarmentNFTV2GlobalStats {\n    digitalaxGarmentNFTV2GlobalStats(first: 1) {\n      id\n      monaPerEth\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}