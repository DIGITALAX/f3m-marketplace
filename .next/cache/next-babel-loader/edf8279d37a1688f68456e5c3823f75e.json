{"ast":null,"code":"import { getAPIUrlByChainId, getEnabledNetworkByChainId } from '@services/network.service';\nimport { request } from 'graphql-request';\nimport { COLLECTIONS, COLLECTIONSV2, COLLECTION_GROUPS, COLLECTION_GROUP_BY_ID, DIGITALAX_GARMENT_AUCTIONS, DIGITALAX_GARMENT_COLLECTIONS, DIGITALAX_GARMENT_NFT_V2_GLOBAL_STATS, DIGITALAX_GARMENT_PURCHASE_HISTORIES, DIGITALAX_GARMENT_V2S, DIGITALAX_GARMENT_V2_PURCHASE_HISTORIES, DIGITALAX_MARKETPLACE_OFFER, DIGITALAX_MARKETPLACE_OFFERS, DIGITALAX_MARKETPLACE_PURCHASE_HISTORIES, DIGITALAX_MARKETPLACE_V2_OFFER, DIGITALAX_MARKETPLACE_V2_OFFERS, DIGITALAX_MARKETPLACE_V2_PURCHASE_HISTORIES, GARMENTV2_BY_AUCTION_ID, GARMENTV2_BY_COLLECTION_ID, GARMENTV2_BY_COLLECTION_IDS, GARMENT_BY_AUCTION_ID, GARMENT_BY_COLLECTION_ID, // For Profile Page\nDIGITALAX_GARMENTS_BY_OWNER, DIGITALAX_GARMENTS, DIGITALAX_GARMENT_V2S_BY_OWNER, DIGITALAX_SUBSCRIPTIONS_BY_OWNER, DIGITALAX_SUBSCRIPTION_COLLECTORS_BY_OWNER, DIGITALAX_NFT_STAKERS_BY_ADDRESS, DIGITALAX_GARMENT_STAKED_TOKENS_BY_ADDRESS, DIGITALAX_GENESIS_NFTS_BY_ADDRESS, DIGITALAX_GENESIS_NFTS, DIGITALAX_GENESIS_STAKED_TOKENS_BY_ADDRESS, DIGITALAX_GARMENT_V2_COLLECTION_BY_GARMENT_ID, PODE_NFT_V2S_BY_ADDRESS, PODE_NFT_V2_STAKERS_BY_ADDRESS, DIGITALAX_COLLETOR_V2_BY_OWNER, GDN_MEMBERSHIP_NFTS_BY_OWNER, DIGITALAX_LOOK_NFTS_BY_OWNER, DIGITALAX_GARMENT_V2_COLLECTIONS_BY_GARMENT_IDS, DIGITALAX_LOOK_GOLDEN_TICKETS_BY_OWNER, DIGITALAX_NFT_STAKERS_BY_GARMENTS, GUILD_WHITELISTED_NFT_STAKERS_BY_GARMENTS, GUILD_WHITELISTED_NFT_STAKERS_BY_STAKER, PATRONS_MARKETPLACE_OFFERS, GET_ALL_NFTS_BY_OWNER, GET_NFT_BY_ID, IS_NFT_LISTED, GET_SELLING_NFTS, GET_SECONDARY_ORDER_BY_CONTRACT_AND_TOKEN_ID, GET_SECONDARY_NFT_INFO, GET_NFT_BY_CONTRACT_AND_TOKEN_ID, GET_SECODARY_ORDERS_BY_OWNER, GET_TRADES_BY_ORDER_ID, GET_ALL_NFTS, GET_ALL_NFTS_BY_IDS, GET_SECONDARY_ORDER_BY_CONTRACT_TOKEN_AND_BUY_OR_SELL, GET_SECONDARY_ORDERS, GET_DIGITALAX_COLLECTION_GROUPS_BY_GARMENT, GET_ALL_TRADES_BY_TOKEN_AND_TOKENID } from './gql.apiService';\nimport config from '../../utils/config';\n\nconst apiRequest = (chainId, gql, params) => request(config.API_URLS['matic'], gql, params);\n\nexport const getCollections = async chainId => apiRequest(chainId, COLLECTIONS);\nexport const getCollectionsV2 = async chainId => apiRequest(chainId, COLLECTIONSV2);\nexport const getCollectionGroups = async chainId => apiRequest(chainId, COLLECTION_GROUPS);\nexport const getDigitalaxGarmentCollections = async chainId => apiRequest(chainId, DIGITALAX_GARMENT_COLLECTIONS);\nexport const getCollectionGroupById = async (chainId, id) => apiRequest(chainId, COLLECTION_GROUP_BY_ID, {\n  id\n});\nexport const getGarmentV2ByCollectionId = async (chainId, id) => apiRequest(chainId, GARMENTV2_BY_COLLECTION_ID, {\n  id\n});\nexport const getGarmentByCollectionId = async (chainId, id) => apiRequest(chainId, GARMENT_BY_COLLECTION_ID, {\n  id\n});\nexport const getCollectionV2ByIds = async (chainId, ids) => apiRequest(chainId, GARMENTV2_BY_COLLECTION_IDS, {\n  ids\n});\nexport const getGarmentV2ByAuctionId = async (chainId, id) => apiRequest(chainId, GARMENTV2_BY_AUCTION_ID, {\n  id\n});\nexport const getDigitalaxMarketplaceOffers = async chainId => apiRequest(chainId, DIGITALAX_MARKETPLACE_OFFERS);\nexport const getDigitalaxMarketplaceV2Offer = async (chainId, garmentCollection) => apiRequest(chainId, DIGITALAX_MARKETPLACE_V2_OFFER, {\n  garmentCollection\n});\nexport const getDigitalaxMarketplaceOffer = async (chainId, garmentCollection) => apiRequest(chainId, DIGITALAX_MARKETPLACE_OFFER, {\n  garmentCollection\n});\nexport const getDigitalaxMarketplaceV2Offers = async chainId => apiRequest(chainId, DIGITALAX_MARKETPLACE_V2_OFFERS);\nexport const getDigitalaxMarketplaceV2PurchaseHistories = async (chainId, ids) => apiRequest(chainId, DIGITALAX_MARKETPLACE_V2_PURCHASE_HISTORIES, {\n  ids\n});\nexport const getDigitalaxMarketplacePurchaseHistories = async (chainId, ids) => apiRequest(chainId, DIGITALAX_MARKETPLACE_PURCHASE_HISTORIES, {\n  ids\n});\nexport const getDigitalaxGarmentV2PurchaseHistories = async (chainId, id) => apiRequest(chainId, DIGITALAX_GARMENT_V2_PURCHASE_HISTORIES, {\n  id\n});\nexport const getDigitalaxGarmentPurchaseHistories = async (chainId, id) => apiRequest(chainId, DIGITALAX_GARMENT_PURCHASE_HISTORIES, {\n  id\n});\nexport const getDigitalaxGarmentNftV2GlobalStats = async chainId => apiRequest(chainId, DIGITALAX_GARMENT_NFT_V2_GLOBAL_STATS);\nexport const getDigitalaxGarmentAuctions = async chainId => apiRequest(chainId, DIGITALAX_GARMENT_AUCTIONS);\nexport const getGarmentByAuctionId = async (chainId, id) => apiRequest(chainId, GARMENT_BY_AUCTION_ID, {\n  id\n});\nexport const getDigitalaxGarmentV2s = async (chainId, ids) => apiRequest(chainId, DIGITALAX_GARMENT_V2S, {\n  ids\n}); // For Profile Page\n\nexport const getDigitalaxGarmentsByOwner = async (chainId, owner, first = 1000, lastID = '') => apiRequest(chainId, DIGITALAX_GARMENTS_BY_OWNER, {\n  owner,\n  first,\n  lastID\n});\nexport const getDigitalaxGarments = async (chainId, ids, first = 1000, lastID = '') => apiRequest(chainId, DIGITALAX_GARMENTS, {\n  ids,\n  first,\n  lastID\n});\nexport const getDigitalaxGarmentV2sByOwner = async (chainId, owner, first = 1000, lastID = '') => apiRequest(chainId, DIGITALAX_GARMENT_V2S_BY_OWNER, {\n  owner,\n  first,\n  lastID\n});\nexport const getDigitalaxSubscriptionsByOwner = async (chainId, owner, first = 1000, lastID = '') => apiRequest(chainId, DIGITALAX_SUBSCRIPTIONS_BY_OWNER, {\n  owner,\n  first,\n  lastID\n});\nexport const getDigitalaxSubscriptionCollectorsByOwner = async (chainId, owner, first = 1000, lastID = '') => apiRequest(chainId, DIGITALAX_SUBSCRIPTION_COLLECTORS_BY_OWNER, {\n  owner,\n  first,\n  lastID\n});\nexport const getDigitalaxNFTStakersByOwner = async (chainId, staker, first = 1000, lastID = '') => apiRequest(chainId, DIGITALAX_NFT_STAKERS_BY_ADDRESS, {\n  staker,\n  first,\n  lastID\n});\nexport const getDigitalaxGarmentStakedTokensByOwner = async (chainId, staker, first = 1000, lastID = '') => apiRequest(chainId, DIGITALAX_GARMENT_STAKED_TOKENS_BY_ADDRESS, {\n  staker,\n  first,\n  lastID\n});\nexport const getDigitalaxGenesisNFTsByOwner = async (chainId, owner, first = 1000, lastID = '') => apiRequest(chainId, DIGITALAX_GENESIS_NFTS_BY_ADDRESS, {\n  owner,\n  first,\n  lastID\n});\nexport const getDigitalaxGenesisNFTs = async (chainId, ids, first = 1000, lastID = '') => apiRequest(chainId, DIGITALAX_GENESIS_NFTS, {\n  ids,\n  first,\n  lastID\n});\nexport const getDigitalaxGenesisStakedTokensByOwner = async (chainId, staker, first = 1000, lastID = '') => apiRequest(chainId, DIGITALAX_GENESIS_STAKED_TOKENS_BY_ADDRESS, {\n  staker,\n  first,\n  lastID\n});\nexport const getCollectionV2ByGarmentId = async (chainId, garmentID) => apiRequest(chainId, DIGITALAX_GARMENT_V2_COLLECTION_BY_GARMENT_ID, {\n  garmentIDs: [garmentID]\n});\nexport const getPodeNFTV2sByOwner = async (chainId, owner, first = 1000, lastID = '') => apiRequest(chainId, PODE_NFT_V2S_BY_ADDRESS, {\n  owner,\n  first,\n  lastID\n});\nexport const getPodeNFTV2StakersByStaker = async (chainId, staker, first = 1000, lastID = '') => apiRequest(chainId, PODE_NFT_V2_STAKERS_BY_ADDRESS, {\n  staker,\n  first,\n  lastID\n});\nexport const getDigitalaxCollectorV2ByOwner = async (chainId, owner) => apiRequest(chainId, DIGITALAX_COLLETOR_V2_BY_OWNER, {\n  owner\n});\nexport const getGDNMembershipNFTsByOwner = async (chainId, owner, first = 1000, lastID = '') => apiRequest(chainId, GDN_MEMBERSHIP_NFTS_BY_OWNER, {\n  owner,\n  first,\n  lastID\n});\nexport const getDigitalaxLookNFTsByOwner = async (chainId, owner, first = 1000, lastID = '') => apiRequest(chainId, DIGITALAX_LOOK_NFTS_BY_OWNER, {\n  owner,\n  first,\n  lastID\n});\nexport const getDigitalaxGarmentV2CollectionsByGarmentIDs = async (chainId, garmentIDs, first = 1000, lastID = '') => apiRequest(chainId, DIGITALAX_GARMENT_V2_COLLECTIONS_BY_GARMENT_IDS, {\n  garmentIDs,\n  first,\n  lastID\n});\nexport const getDigitalaxLookGoldenTicketsByOwner = async (chainId, owner, first = 1000, lastID = '') => apiRequest(chainId, DIGITALAX_LOOK_GOLDEN_TICKETS_BY_OWNER, {\n  owner,\n  first,\n  lastID\n});\nexport const getDigitalaxNFTStakersByGarments = async (chainId, garmentIDs, first = 1000, lastID = '') => apiRequest(chainId, DIGITALAX_NFT_STAKERS_BY_GARMENTS, {\n  garmentIDs,\n  first,\n  lastID\n});\nexport const getPatronMarketplaceOffers = async (chainId, first = 1000, lastID = '') => apiRequest(chainId, PATRONS_MARKETPLACE_OFFERS, {\n  first,\n  lastID\n});\nexport const getGuildWhitelistedNFTStakersByGarments = async (chainId, garmentIDs, first = 1000, lastID = '') => request(config.DLTA_API_URL, GUILD_WHITELISTED_NFT_STAKERS_BY_GARMENTS, {\n  garmentIDs,\n  first,\n  lastID\n});\nexport const getGuildWhitelistedNFTStakersByStaker = async (chainId, staker, first = 1000, lastID = '') => request(config.DLTA_API_URL, GUILD_WHITELISTED_NFT_STAKERS_BY_STAKER, {\n  staker,\n  first,\n  lastID\n});\nexport const getAllNFTsByOwner = async (owner, url) => request(url, GET_ALL_NFTS_BY_OWNER, {\n  owner\n});\nexport const getAllTradesByTokensAndTokenIds = async url => request(url, GET_ALL_TRADES_BY_TOKEN_AND_TOKENID);\nexport const getAllNFTs = async url => request(url, GET_ALL_NFTS);\nexport const getAllNFTsByIds = async (url, ids) => request(url, GET_ALL_NFTS_BY_IDS, {\n  ids\n});\nexport const getNFTById = async (id, url) => request(url, GET_NFT_BY_ID, {\n  id\n});\nexport const getIsNFTListed = async (url, owner, token, tokenId) => request(url, IS_NFT_LISTED, {\n  owner,\n  token,\n  tokenId\n});\nexport const getSellingNfts = async url => request(url, GET_SELLING_NFTS);\nexport const getSecondaryOrderByContractAndTokenId = async (url, contract, tokenIds) => request(url, GET_SECONDARY_ORDER_BY_CONTRACT_AND_TOKEN_ID, {\n  contract,\n  tokenIds\n});\nexport const getSecondaryOrderByContractTokenAndBuyorsell = async (url, contract, tokenIds, buyOrSell) => request(url, GET_SECONDARY_ORDER_BY_CONTRACT_TOKEN_AND_BUY_OR_SELL, {\n  contract,\n  tokenIds,\n  buyOrSell\n});\nexport const getSecondaryOrders = async url => request(url, GET_SECONDARY_ORDERS);\nexport const getNFTByContractAndTokenId = async (url, contract, tokenId) => request(url, GET_NFT_BY_CONTRACT_AND_TOKEN_ID, {\n  contract,\n  tokenId\n});\nexport const getSecondaryNftInfo = async (url, id) => request(url, GET_SECONDARY_NFT_INFO, {\n  id\n});\nexport const getSecondaryOrderByOwner = async (url, owner) => request(url, GET_SECODARY_ORDERS_BY_OWNER, {\n  owner\n});\nexport const getTradesByOrderId = async (url, ids) => request(url, GET_TRADES_BY_ORDER_ID, {\n  ids\n});\nexport const getAllDigitalaxCollectionGroupsByGarment = async (url, garment) => request(url, GET_DIGITALAX_COLLECTION_GROUPS_BY_GARMENT, {\n  garment\n});","map":{"version":3,"sources":["/Volumes/Data/Work/Digitalax/f3m-marketplace/src/services/api/apiService.js"],"names":["getAPIUrlByChainId","getEnabledNetworkByChainId","request","COLLECTIONS","COLLECTIONSV2","COLLECTION_GROUPS","COLLECTION_GROUP_BY_ID","DIGITALAX_GARMENT_AUCTIONS","DIGITALAX_GARMENT_COLLECTIONS","DIGITALAX_GARMENT_NFT_V2_GLOBAL_STATS","DIGITALAX_GARMENT_PURCHASE_HISTORIES","DIGITALAX_GARMENT_V2S","DIGITALAX_GARMENT_V2_PURCHASE_HISTORIES","DIGITALAX_MARKETPLACE_OFFER","DIGITALAX_MARKETPLACE_OFFERS","DIGITALAX_MARKETPLACE_PURCHASE_HISTORIES","DIGITALAX_MARKETPLACE_V2_OFFER","DIGITALAX_MARKETPLACE_V2_OFFERS","DIGITALAX_MARKETPLACE_V2_PURCHASE_HISTORIES","GARMENTV2_BY_AUCTION_ID","GARMENTV2_BY_COLLECTION_ID","GARMENTV2_BY_COLLECTION_IDS","GARMENT_BY_AUCTION_ID","GARMENT_BY_COLLECTION_ID","DIGITALAX_GARMENTS_BY_OWNER","DIGITALAX_GARMENTS","DIGITALAX_GARMENT_V2S_BY_OWNER","DIGITALAX_SUBSCRIPTIONS_BY_OWNER","DIGITALAX_SUBSCRIPTION_COLLECTORS_BY_OWNER","DIGITALAX_NFT_STAKERS_BY_ADDRESS","DIGITALAX_GARMENT_STAKED_TOKENS_BY_ADDRESS","DIGITALAX_GENESIS_NFTS_BY_ADDRESS","DIGITALAX_GENESIS_NFTS","DIGITALAX_GENESIS_STAKED_TOKENS_BY_ADDRESS","DIGITALAX_GARMENT_V2_COLLECTION_BY_GARMENT_ID","PODE_NFT_V2S_BY_ADDRESS","PODE_NFT_V2_STAKERS_BY_ADDRESS","DIGITALAX_COLLETOR_V2_BY_OWNER","GDN_MEMBERSHIP_NFTS_BY_OWNER","DIGITALAX_LOOK_NFTS_BY_OWNER","DIGITALAX_GARMENT_V2_COLLECTIONS_BY_GARMENT_IDS","DIGITALAX_LOOK_GOLDEN_TICKETS_BY_OWNER","DIGITALAX_NFT_STAKERS_BY_GARMENTS","GUILD_WHITELISTED_NFT_STAKERS_BY_GARMENTS","GUILD_WHITELISTED_NFT_STAKERS_BY_STAKER","PATRONS_MARKETPLACE_OFFERS","GET_ALL_NFTS_BY_OWNER","GET_NFT_BY_ID","IS_NFT_LISTED","GET_SELLING_NFTS","GET_SECONDARY_ORDER_BY_CONTRACT_AND_TOKEN_ID","GET_SECONDARY_NFT_INFO","GET_NFT_BY_CONTRACT_AND_TOKEN_ID","GET_SECODARY_ORDERS_BY_OWNER","GET_TRADES_BY_ORDER_ID","GET_ALL_NFTS","GET_ALL_NFTS_BY_IDS","GET_SECONDARY_ORDER_BY_CONTRACT_TOKEN_AND_BUY_OR_SELL","GET_SECONDARY_ORDERS","GET_DIGITALAX_COLLECTION_GROUPS_BY_GARMENT","GET_ALL_TRADES_BY_TOKEN_AND_TOKENID","config","apiRequest","chainId","gql","params","API_URLS","getCollections","getCollectionsV2","getCollectionGroups","getDigitalaxGarmentCollections","getCollectionGroupById","id","getGarmentV2ByCollectionId","getGarmentByCollectionId","getCollectionV2ByIds","ids","getGarmentV2ByAuctionId","getDigitalaxMarketplaceOffers","getDigitalaxMarketplaceV2Offer","garmentCollection","getDigitalaxMarketplaceOffer","getDigitalaxMarketplaceV2Offers","getDigitalaxMarketplaceV2PurchaseHistories","getDigitalaxMarketplacePurchaseHistories","getDigitalaxGarmentV2PurchaseHistories","getDigitalaxGarmentPurchaseHistories","getDigitalaxGarmentNftV2GlobalStats","getDigitalaxGarmentAuctions","getGarmentByAuctionId","getDigitalaxGarmentV2s","getDigitalaxGarmentsByOwner","owner","first","lastID","getDigitalaxGarments","getDigitalaxGarmentV2sByOwner","getDigitalaxSubscriptionsByOwner","getDigitalaxSubscriptionCollectorsByOwner","getDigitalaxNFTStakersByOwner","staker","getDigitalaxGarmentStakedTokensByOwner","getDigitalaxGenesisNFTsByOwner","getDigitalaxGenesisNFTs","getDigitalaxGenesisStakedTokensByOwner","getCollectionV2ByGarmentId","garmentID","garmentIDs","getPodeNFTV2sByOwner","getPodeNFTV2StakersByStaker","getDigitalaxCollectorV2ByOwner","getGDNMembershipNFTsByOwner","getDigitalaxLookNFTsByOwner","getDigitalaxGarmentV2CollectionsByGarmentIDs","getDigitalaxLookGoldenTicketsByOwner","getDigitalaxNFTStakersByGarments","getPatronMarketplaceOffers","getGuildWhitelistedNFTStakersByGarments","DLTA_API_URL","getGuildWhitelistedNFTStakersByStaker","getAllNFTsByOwner","url","getAllTradesByTokensAndTokenIds","getAllNFTs","getAllNFTsByIds","getNFTById","getIsNFTListed","token","tokenId","getSellingNfts","getSecondaryOrderByContractAndTokenId","contract","tokenIds","getSecondaryOrderByContractTokenAndBuyorsell","buyOrSell","getSecondaryOrders","getNFTByContractAndTokenId","getSecondaryNftInfo","getSecondaryOrderByOwner","getTradesByOrderId","getAllDigitalaxCollectionGroupsByGarment","garment"],"mappings":"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","sourcesContent":["import { getAPIUrlByChainId, getEnabledNetworkByChainId } from '@services/network.service';\nimport { request } from 'graphql-request';\nimport {\n  COLLECTIONS,\n  COLLECTIONSV2,\n  COLLECTION_GROUPS,\n  COLLECTION_GROUP_BY_ID,\n  DIGITALAX_GARMENT_AUCTIONS,\n  DIGITALAX_GARMENT_COLLECTIONS,\n  DIGITALAX_GARMENT_NFT_V2_GLOBAL_STATS,\n  DIGITALAX_GARMENT_PURCHASE_HISTORIES,\n  DIGITALAX_GARMENT_V2S,\n  DIGITALAX_GARMENT_V2_PURCHASE_HISTORIES,\n  DIGITALAX_MARKETPLACE_OFFER,\n  DIGITALAX_MARKETPLACE_OFFERS,\n  DIGITALAX_MARKETPLACE_PURCHASE_HISTORIES,\n  DIGITALAX_MARKETPLACE_V2_OFFER,\n  DIGITALAX_MARKETPLACE_V2_OFFERS,\n  DIGITALAX_MARKETPLACE_V2_PURCHASE_HISTORIES,\n  GARMENTV2_BY_AUCTION_ID,\n  GARMENTV2_BY_COLLECTION_ID,\n  GARMENTV2_BY_COLLECTION_IDS,\n  GARMENT_BY_AUCTION_ID,\n  GARMENT_BY_COLLECTION_ID,\n  // For Profile Page\n  DIGITALAX_GARMENTS_BY_OWNER,\n  DIGITALAX_GARMENTS,\n  DIGITALAX_GARMENT_V2S_BY_OWNER,\n  DIGITALAX_SUBSCRIPTIONS_BY_OWNER,\n  DIGITALAX_SUBSCRIPTION_COLLECTORS_BY_OWNER,\n  DIGITALAX_NFT_STAKERS_BY_ADDRESS,\n  DIGITALAX_GARMENT_STAKED_TOKENS_BY_ADDRESS,\n  DIGITALAX_GENESIS_NFTS_BY_ADDRESS,\n  DIGITALAX_GENESIS_NFTS,\n  DIGITALAX_GENESIS_STAKED_TOKENS_BY_ADDRESS,\n  DIGITALAX_GARMENT_V2_COLLECTION_BY_GARMENT_ID,\n  PODE_NFT_V2S_BY_ADDRESS,\n  PODE_NFT_V2_STAKERS_BY_ADDRESS,\n  DIGITALAX_COLLETOR_V2_BY_OWNER,\n  GDN_MEMBERSHIP_NFTS_BY_OWNER,\n  DIGITALAX_LOOK_NFTS_BY_OWNER,\n  DIGITALAX_GARMENT_V2_COLLECTIONS_BY_GARMENT_IDS,\n  DIGITALAX_LOOK_GOLDEN_TICKETS_BY_OWNER,\n  DIGITALAX_NFT_STAKERS_BY_GARMENTS,\n  GUILD_WHITELISTED_NFT_STAKERS_BY_GARMENTS,\n  GUILD_WHITELISTED_NFT_STAKERS_BY_STAKER,\n  PATRONS_MARKETPLACE_OFFERS,\n  GET_ALL_NFTS_BY_OWNER,\n  GET_NFT_BY_ID,\n  IS_NFT_LISTED,\n  GET_SELLING_NFTS,\n  GET_SECONDARY_ORDER_BY_CONTRACT_AND_TOKEN_ID,\n  GET_SECONDARY_NFT_INFO,\n  GET_NFT_BY_CONTRACT_AND_TOKEN_ID,\n  GET_SECODARY_ORDERS_BY_OWNER,\n  GET_TRADES_BY_ORDER_ID,\n  GET_ALL_NFTS,\n  GET_ALL_NFTS_BY_IDS,\n  GET_SECONDARY_ORDER_BY_CONTRACT_TOKEN_AND_BUY_OR_SELL,\n  GET_SECONDARY_ORDERS,\n  GET_DIGITALAX_COLLECTION_GROUPS_BY_GARMENT,\n  GET_ALL_TRADES_BY_TOKEN_AND_TOKENID,\n} from './gql.apiService';\nimport config from '../../utils/config';\n\nconst apiRequest = (chainId, gql, params) => request(config.API_URLS['matic'], gql, params);\n\nexport const getCollections = async (chainId) => apiRequest(chainId, COLLECTIONS);\n\nexport const getCollectionsV2 = async (chainId) => apiRequest(chainId, COLLECTIONSV2);\n\nexport const getCollectionGroups = async (chainId) => apiRequest(chainId, COLLECTION_GROUPS);\n\nexport const getDigitalaxGarmentCollections = async (chainId) =>\n  apiRequest(chainId, DIGITALAX_GARMENT_COLLECTIONS);\n\nexport const getCollectionGroupById = async (chainId, id) =>\n  apiRequest(chainId, COLLECTION_GROUP_BY_ID, { id });\n\nexport const getGarmentV2ByCollectionId = async (chainId, id) =>\n  apiRequest(chainId, GARMENTV2_BY_COLLECTION_ID, { id });\n\nexport const getGarmentByCollectionId = async (chainId, id) =>\n  apiRequest(chainId, GARMENT_BY_COLLECTION_ID, { id });\n\nexport const getCollectionV2ByIds = async (chainId, ids) =>\n  apiRequest(chainId, GARMENTV2_BY_COLLECTION_IDS, { ids });\n\nexport const getGarmentV2ByAuctionId = async (chainId, id) =>\n  apiRequest(chainId, GARMENTV2_BY_AUCTION_ID, { id });\n\nexport const getDigitalaxMarketplaceOffers = async (chainId) =>\n  apiRequest(chainId, DIGITALAX_MARKETPLACE_OFFERS);\n\nexport const getDigitalaxMarketplaceV2Offer = async (chainId, garmentCollection) =>\n  apiRequest(chainId, DIGITALAX_MARKETPLACE_V2_OFFER, { garmentCollection });\n\nexport const getDigitalaxMarketplaceOffer = async (chainId, garmentCollection) =>\n  apiRequest(chainId, DIGITALAX_MARKETPLACE_OFFER, { garmentCollection });\n\nexport const getDigitalaxMarketplaceV2Offers = async (chainId) =>\n  apiRequest(chainId, DIGITALAX_MARKETPLACE_V2_OFFERS);\n\nexport const getDigitalaxMarketplaceV2PurchaseHistories = async (chainId, ids) =>\n  apiRequest(chainId, DIGITALAX_MARKETPLACE_V2_PURCHASE_HISTORIES, { ids });\n\nexport const getDigitalaxMarketplacePurchaseHistories = async (chainId, ids) =>\n  apiRequest(chainId, DIGITALAX_MARKETPLACE_PURCHASE_HISTORIES, { ids });\n\nexport const getDigitalaxGarmentV2PurchaseHistories = async (chainId, id) =>\n  apiRequest(chainId, DIGITALAX_GARMENT_V2_PURCHASE_HISTORIES, { id });\n\nexport const getDigitalaxGarmentPurchaseHistories = async (chainId, id) =>\n  apiRequest(chainId, DIGITALAX_GARMENT_PURCHASE_HISTORIES, { id });\n\nexport const getDigitalaxGarmentNftV2GlobalStats = async (chainId) =>\n  apiRequest(chainId, DIGITALAX_GARMENT_NFT_V2_GLOBAL_STATS);\n\nexport const getDigitalaxGarmentAuctions = async (chainId) =>\n  apiRequest(chainId, DIGITALAX_GARMENT_AUCTIONS);\n\nexport const getGarmentByAuctionId = async (chainId, id) =>\n  apiRequest(chainId, GARMENT_BY_AUCTION_ID, { id });\n\nexport const getDigitalaxGarmentV2s = async (chainId, ids) =>\n  apiRequest(chainId, DIGITALAX_GARMENT_V2S, { ids });\n\n// For Profile Page\nexport const getDigitalaxGarmentsByOwner = async (chainId, owner, first = 1000, lastID = '') =>\n  apiRequest(chainId, DIGITALAX_GARMENTS_BY_OWNER, { owner, first, lastID });\n\nexport const getDigitalaxGarments = async (chainId, ids, first = 1000, lastID = '') =>\n  apiRequest(chainId, DIGITALAX_GARMENTS, { ids, first, lastID });\n\nexport const getDigitalaxGarmentV2sByOwner = async (chainId, owner, first = 1000, lastID = '') =>\n  apiRequest(chainId, DIGITALAX_GARMENT_V2S_BY_OWNER, { owner, first, lastID });\n\nexport const getDigitalaxSubscriptionsByOwner = async (chainId, owner, first = 1000, lastID = '') =>\n  apiRequest(chainId, DIGITALAX_SUBSCRIPTIONS_BY_OWNER, { owner, first, lastID });\n\nexport const getDigitalaxSubscriptionCollectorsByOwner = async (\n  chainId,\n  owner,\n  first = 1000,\n  lastID = '',\n) => apiRequest(chainId, DIGITALAX_SUBSCRIPTION_COLLECTORS_BY_OWNER, { owner, first, lastID });\n\nexport const getDigitalaxNFTStakersByOwner = async (chainId, staker, first = 1000, lastID = '') =>\n  apiRequest(chainId, DIGITALAX_NFT_STAKERS_BY_ADDRESS, { staker, first, lastID });\n\nexport const getDigitalaxGarmentStakedTokensByOwner = async (\n  chainId,\n  staker,\n  first = 1000,\n  lastID = '',\n) => apiRequest(chainId, DIGITALAX_GARMENT_STAKED_TOKENS_BY_ADDRESS, { staker, first, lastID });\n\nexport const getDigitalaxGenesisNFTsByOwner = async (chainId, owner, first = 1000, lastID = '') =>\n  apiRequest(chainId, DIGITALAX_GENESIS_NFTS_BY_ADDRESS, { owner, first, lastID });\n\nexport const getDigitalaxGenesisNFTs = async (chainId, ids, first = 1000, lastID = '') =>\n  apiRequest(chainId, DIGITALAX_GENESIS_NFTS, { ids, first, lastID });\n\nexport const getDigitalaxGenesisStakedTokensByOwner = async (\n  chainId,\n  staker,\n  first = 1000,\n  lastID = '',\n) => apiRequest(chainId, DIGITALAX_GENESIS_STAKED_TOKENS_BY_ADDRESS, { staker, first, lastID });\n\nexport const getCollectionV2ByGarmentId = async (chainId, garmentID) =>\n  apiRequest(chainId, DIGITALAX_GARMENT_V2_COLLECTION_BY_GARMENT_ID, { garmentIDs: [garmentID] });\n\nexport const getPodeNFTV2sByOwner = async (chainId, owner, first = 1000, lastID = '') =>\n  apiRequest(chainId, PODE_NFT_V2S_BY_ADDRESS, { owner, first, lastID });\n\nexport const getPodeNFTV2StakersByStaker = async (chainId, staker, first = 1000, lastID = '') =>\n  apiRequest(chainId, PODE_NFT_V2_STAKERS_BY_ADDRESS, { staker, first, lastID });\n\nexport const getDigitalaxCollectorV2ByOwner = async (chainId, owner) =>\n  apiRequest(chainId, DIGITALAX_COLLETOR_V2_BY_OWNER, { owner });\n\nexport const getGDNMembershipNFTsByOwner = async (chainId, owner, first = 1000, lastID = '') =>\n  apiRequest(chainId, GDN_MEMBERSHIP_NFTS_BY_OWNER, { owner, first, lastID });\n\nexport const getDigitalaxLookNFTsByOwner = async (chainId, owner, first = 1000, lastID = '') =>\n  apiRequest(chainId, DIGITALAX_LOOK_NFTS_BY_OWNER, { owner, first, lastID });\n\nexport const getDigitalaxGarmentV2CollectionsByGarmentIDs = async (\n  chainId,\n  garmentIDs,\n  first = 1000,\n  lastID = '',\n) =>\n  apiRequest(chainId, DIGITALAX_GARMENT_V2_COLLECTIONS_BY_GARMENT_IDS, {\n    garmentIDs,\n    first,\n    lastID,\n  });\n\nexport const getDigitalaxLookGoldenTicketsByOwner = async (\n  chainId,\n  owner,\n  first = 1000,\n  lastID = '',\n) => apiRequest(chainId, DIGITALAX_LOOK_GOLDEN_TICKETS_BY_OWNER, { owner, first, lastID });\n\nexport const getDigitalaxNFTStakersByGarments = async (\n  chainId,\n  garmentIDs,\n  first = 1000,\n  lastID = '',\n) => apiRequest(chainId, DIGITALAX_NFT_STAKERS_BY_GARMENTS, { garmentIDs, first, lastID });\n\nexport  const getPatronMarketplaceOffers = async (chainId, first=1000, lastID='') =>\n  apiRequest(chainId, PATRONS_MARKETPLACE_OFFERS, { first, lastID  })\n\nexport const getGuildWhitelistedNFTStakersByGarments = async (\n  chainId,\n  garmentIDs,\n  first = 1000,\n  lastID = '',\n) =>\n  request(config.DLTA_API_URL, GUILD_WHITELISTED_NFT_STAKERS_BY_GARMENTS, {\n    garmentIDs,\n    first,\n    lastID,\n  });\n\nexport const getGuildWhitelistedNFTStakersByStaker = async (\n  chainId,\n  staker,\n  first = 1000,\n  lastID = '',\n) =>\n  request(config.DLTA_API_URL, GUILD_WHITELISTED_NFT_STAKERS_BY_STAKER, { staker, first, lastID });\n\nexport const getAllNFTsByOwner = async (owner, url) =>\n  request(url, GET_ALL_NFTS_BY_OWNER, { owner });\n\nexport const getAllTradesByTokensAndTokenIds = async (url) =>\n  request(url, GET_ALL_TRADES_BY_TOKEN_AND_TOKENID)\n\nexport const getAllNFTs = async (url) => request(url, GET_ALL_NFTS);\n\nexport const getAllNFTsByIds = async (url, ids) => request(url, GET_ALL_NFTS_BY_IDS, { ids });\n\nexport const getNFTById = async (id, url) => request(url, GET_NFT_BY_ID, { id });\n\nexport const getIsNFTListed = async (url, owner, token, tokenId) =>\n  request(url, IS_NFT_LISTED, { owner, token, tokenId });\n\nexport const getSellingNfts = async (url) => request(url, GET_SELLING_NFTS);\n\nexport const getSecondaryOrderByContractAndTokenId = async (url, contract, tokenIds) =>\n  request(url, GET_SECONDARY_ORDER_BY_CONTRACT_AND_TOKEN_ID, { contract, tokenIds });\n\nexport const getSecondaryOrderByContractTokenAndBuyorsell = async (\n  url,\n  contract,\n  tokenIds,\n  buyOrSell,\n) =>\n  request(url, GET_SECONDARY_ORDER_BY_CONTRACT_TOKEN_AND_BUY_OR_SELL, {\n    contract,\n    tokenIds,\n    buyOrSell,\n  });\n\nexport const getSecondaryOrders = async (url) => request(url, GET_SECONDARY_ORDERS);\n\nexport const getNFTByContractAndTokenId = async (url, contract, tokenId) =>\n  request(url, GET_NFT_BY_CONTRACT_AND_TOKEN_ID, { contract, tokenId });\n\nexport const getSecondaryNftInfo = async (url, id) => request(url, GET_SECONDARY_NFT_INFO, { id });\n\nexport const getSecondaryOrderByOwner = async (url, owner) =>\n  request(url, GET_SECODARY_ORDERS_BY_OWNER, { owner });\n\nexport const getTradesByOrderId = async (url, ids) => request(url, GET_TRADES_BY_ORDER_ID, { ids });\n\nexport const getAllDigitalaxCollectionGroupsByGarment = async (url, garment) =>\n  request(url, GET_DIGITALAX_COLLECTION_GROUPS_BY_GARMENT, { garment });\n"]},"metadata":{},"sourceType":"module"}