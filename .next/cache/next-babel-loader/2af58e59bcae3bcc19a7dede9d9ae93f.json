{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState, useRef } from 'react';\nimport api from '@services/api/espa/api.service';\nexport function useSignMessage(account) {\n  const {\n    0: signMsg,\n    1: setSignMsg\n  } = useState(null);\n  useEffect(() => {\n    api.fetchAuthToken(account).then(msg => setSignMsg(msg));\n  }, [account]);\n  return signMsg;\n}\nexport function useUserNameAvailable(username) {\n  const {\n    0: isAvailable,\n    1: setUserNameAvailable\n  } = useState(true);\n  const timer = useRef(null);\n  useEffect(() => {\n    if (username) {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n\n      timer.current = setTimeout(() => {\n        if (username.length <= 10) {\n          api.checkUserName(username).then(isAvailable => setUserNameAvailable(isAvailable));\n        }\n      }, 1000);\n    }\n  }, [username]);\n  return isAvailable;\n}\nexport function useNFTs(account) {\n  const {\n    0: nfts,\n    1: setNfts\n  } = useState(null);\n  useEffect(() => {\n    api.fetchNfts(account).then(data => {\n      let items = [];\n\n      if (data.digitalaxCollectors.length) {\n        items = data.digitalaxCollectors[0].parentsOwned.map(item => {\n          return _objectSpread(_objectSpread({}, item), {}, {\n            isEth: true\n          });\n        });\n      }\n\n      for (let item of data.digitalaxGarments) {\n        if (!items.find(el => el.id === item.id)) {\n          items = [...items, _objectSpread(_objectSpread({}, item), {}, {\n            isStaked: true\n          })];\n        }\n      }\n\n      if (data.matic.digitalaxCollectors.length) {\n        items = [...items, ...data.matic.digitalaxCollectors[0].parentsOwned];\n      }\n\n      setNfts(items);\n    }).catch(e => setNfts([]));\n  }, [account]);\n  return nfts;\n}\nexport function useProfile() {\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  useEffect(() => {\n    api.getProfile().then(data => setUser(data));\n  }, []);\n  return user;\n}\nexport function useMyIP() {\n  const {\n    0: ip,\n    1: setIp\n  } = useState(null);\n  useEffect(() => {\n    api.getMyIP().then(data => setIp(data));\n  }, []);\n  return ip;\n}","map":{"version":3,"sources":["/Volumes/Data/Work/Digitalax/f3m-marketplace/src/hooks/espa/user.hooks.js"],"names":["useEffect","useState","useRef","api","useSignMessage","account","signMsg","setSignMsg","fetchAuthToken","then","msg","useUserNameAvailable","username","isAvailable","setUserNameAvailable","timer","current","clearTimeout","setTimeout","length","checkUserName","useNFTs","nfts","setNfts","fetchNfts","data","items","digitalaxCollectors","parentsOwned","map","item","isEth","digitalaxGarments","find","el","id","isStaked","matic","catch","e","useProfile","user","setUser","getProfile","useMyIP","ip","setIp","getMyIP"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport api from '@services/api/espa/api.service';\n\nexport function useSignMessage(account) {\n  const [signMsg, setSignMsg] = useState(null);\n\n  useEffect(() => {\n    api.fetchAuthToken(account).then((msg) => setSignMsg(msg));\n  }, [account]);\n\n  return signMsg;\n}\n\nexport function useUserNameAvailable(username) {\n  const [isAvailable, setUserNameAvailable] = useState(true);\n  const timer = useRef(null);\n\n  useEffect(() => {\n    if (username) {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n\n      timer.current = setTimeout(() => {\n        if (username.length <= 10) {\n          api.checkUserName(username)\n            .then(isAvailable => setUserNameAvailable(isAvailable));\n        }\n      }, 1000);\n    }\n  }, [username]);\n\n  return isAvailable;\n}\n\nexport function useNFTs(account) {\n  const [nfts, setNfts] = useState(null);\n\n  useEffect(() => {\n    api\n      .fetchNfts(account)\n      .then((data) => {\n        let items = [];\n        if (data.digitalaxCollectors.length) {\n          items = data.digitalaxCollectors[0].parentsOwned.map((item) => {\n            return {\n              ...item,\n              isEth: true,\n            };\n          });\n        }\n        for (let item of data.digitalaxGarments) {\n          if (!items.find((el) => el.id === item.id)) {\n            items = [...items, { ...item, isStaked: true }];\n          }\n        }\n        if (data.matic.digitalaxCollectors.length) {\n          items = [...items, ...data.matic.digitalaxCollectors[0].parentsOwned];\n        }\n        setNfts(items);\n      })\n      .catch((e) => setNfts([]));\n  }, [account]);\n\n  return nfts;\n}\n\nexport function useProfile() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    api.getProfile().then((data) => setUser(data));\n  }, []);\n\n  return user;\n}\n\nexport function useMyIP() {\n  const [ip, setIp] = useState(null);\n\n  useEffect(() => {\n    api.getMyIP().then((data) => setIp(data));\n  }, []);\n\n  return ip;\n}\n"]},"metadata":{},"sourceType":"module"}