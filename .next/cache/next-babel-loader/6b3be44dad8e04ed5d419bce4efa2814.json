{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/Work/Digitalax/f3m-marketplace/src/containers/modals/modal-connect-matic/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from '@components/buttons/button';\nimport Modal from '@components/modal';\nimport { closeConnectMaticModal } from '@actions/modals.actions';\nimport styles from './styles.module.scss';\n\nconst ModalConnectMatic = ({\n  className,\n  title,\n  buttonText\n}) => {\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    dispatch(closeConnectMaticModal());\n  };\n\n  return __jsx(React.Fragment, null, /*#__PURE__*/createPortal(__jsx(Modal, {\n    onClose: () => handleClose(),\n    title: title,\n    titleStyle: styles.textCenter,\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Please make sure your wallet is connected to Matic Network so that you can get skinned!\"), __jsx(Button, {\n    background: \"black\",\n    className: styles.button,\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, buttonText)), document.body));\n};\n\nModalConnectMatic.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  buttonText1: PropTypes.string,\n  buttonText2: PropTypes.string\n};\nModalConnectMatic.defaultProps = {\n  className: '',\n  title: 'CONNECT TO MATIC!',\n  buttonText: 'ACCEPT THE QUEST'\n};\nexport default ModalConnectMatic;","map":{"version":3,"sources":["/Volumes/Data/Work/Digitalax/f3m-marketplace/src/containers/modals/modal-connect-matic/index.js"],"names":["React","createPortal","useDispatch","PropTypes","Button","Modal","closeConnectMaticModal","styles","ModalConnectMatic","className","title","buttonText","dispatch","handleClose","textCenter","description","button","document","body","propTypes","string","buttonText1","buttonText2","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,sBAAT,QAAuC,yBAAvC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA;AAApB,CAAD,KAAsC;AAC9D,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AACA,QAAMW,WAAW,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAACN,sBAAsB,EAAvB,CAAR;AACD,GAFD;;AAIA,SACE,yCACGL,YAAY,CACX,MAAC,KAAD;AACE,IAAA,OAAO,EAAE,MAAMY,WAAW,EAD5B;AAEE,IAAA,KAAK,EAAEH,KAFT;AAGE,IAAA,UAAU,EAAEH,MAAM,CAACO,UAHrB;AAIE,IAAA,SAAS,EAAEL,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAG,IAAA,SAAS,EAAEF,MAAM,CAACQ,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FANF,EASE,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAER,MAAM,CAACS,MAA7C;AAAqD,IAAA,OAAO,EAAEH,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,UADH,CATF,CADW,EAcXM,QAAQ,CAACC,IAdE,CADf,CADF;AAoBD,CA1BD;;AA4BAV,iBAAiB,CAACW,SAAlB,GAA8B;AAC5BV,EAAAA,SAAS,EAAEN,SAAS,CAACiB,MADO;AAE5BV,EAAAA,KAAK,EAAEP,SAAS,CAACiB,MAFW;AAG5BC,EAAAA,WAAW,EAAElB,SAAS,CAACiB,MAHK;AAI5BE,EAAAA,WAAW,EAAEnB,SAAS,CAACiB;AAJK,CAA9B;AAOAZ,iBAAiB,CAACe,YAAlB,GAAiC;AAC/Bd,EAAAA,SAAS,EAAE,EADoB;AAE/BC,EAAAA,KAAK,EAAE,mBAFwB;AAG/BC,EAAAA,UAAU,EAAE;AAHmB,CAAjC;AAMA,eAAeH,iBAAf","sourcesContent":["import React from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from '@components/buttons/button';\nimport Modal from '@components/modal';\nimport { closeConnectMaticModal } from '@actions/modals.actions';\nimport styles from './styles.module.scss';\n\nconst ModalConnectMatic = ({ className, title, buttonText }) => {\n  const dispatch = useDispatch();\n  const handleClose = () => {\n    dispatch(closeConnectMaticModal());\n  };\n\n  return (\n    <>\n      {createPortal(\n        <Modal\n          onClose={() => handleClose()}\n          title={title}\n          titleStyle={styles.textCenter}\n          className={className}\n        >\n          <p className={styles.description}>\n            Please make sure your wallet is connected to Matic Network so that you can get skinned!\n          </p>\n          <Button background=\"black\" className={styles.button} onClick={handleClose}>\n            {buttonText}\n          </Button>\n        </Modal>,\n        document.body\n      )}\n    </>\n  );\n};\n\nModalConnectMatic.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  buttonText1: PropTypes.string,\n  buttonText2: PropTypes.string,\n};\n\nModalConnectMatic.defaultProps = {\n  className: '',\n  title: 'CONNECT TO MATIC!',\n  buttonText: 'ACCEPT THE QUEST',\n};\n\nexport default ModalConnectMatic;\n"]},"metadata":{},"sourceType":"module"}